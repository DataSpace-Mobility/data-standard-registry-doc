{
  "files": [
    {
      "name": "gtfs-realtime.proto",
      "description": "",
      "package": "transit_realtime",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Cause",
          "longName": "Alert.Cause",
          "fullName": "transit_realtime.Alert.Cause",
          "description": "Cause of this alert.",
          "values": [
            {
              "name": "UNKNOWN_CAUSE",
              "number": "1",
              "description": ""
            },
            {
              "name": "OTHER_CAUSE",
              "number": "2",
              "description": "Not machine-representable."
            },
            {
              "name": "TECHNICAL_PROBLEM",
              "number": "3",
              "description": ""
            },
            {
              "name": "STRIKE",
              "number": "4",
              "description": "Public transit agency employees stopped working."
            },
            {
              "name": "DEMONSTRATION",
              "number": "5",
              "description": "People are blocking the streets."
            },
            {
              "name": "ACCIDENT",
              "number": "6",
              "description": ""
            },
            {
              "name": "HOLIDAY",
              "number": "7",
              "description": ""
            },
            {
              "name": "WEATHER",
              "number": "8",
              "description": ""
            },
            {
              "name": "MAINTENANCE",
              "number": "9",
              "description": ""
            },
            {
              "name": "CONSTRUCTION",
              "number": "10",
              "description": ""
            },
            {
              "name": "POLICE_ACTIVITY",
              "number": "11",
              "description": ""
            },
            {
              "name": "MEDICAL_EMERGENCY",
              "number": "12",
              "description": ""
            }
          ]
        },
        {
          "name": "Effect",
          "longName": "Alert.Effect",
          "fullName": "transit_realtime.Alert.Effect",
          "description": "What is the effect of this problem on the affected entity.",
          "values": [
            {
              "name": "NO_SERVICE",
              "number": "1",
              "description": ""
            },
            {
              "name": "REDUCED_SERVICE",
              "number": "2",
              "description": ""
            },
            {
              "name": "SIGNIFICANT_DELAYS",
              "number": "3",
              "description": "We don't care about INsignificant delays: they are hard to detect, have\nlittle impact on the user, and would clutter the results as they are too\nfrequent."
            },
            {
              "name": "DETOUR",
              "number": "4",
              "description": ""
            },
            {
              "name": "ADDITIONAL_SERVICE",
              "number": "5",
              "description": ""
            },
            {
              "name": "MODIFIED_SERVICE",
              "number": "6",
              "description": ""
            },
            {
              "name": "OTHER_EFFECT",
              "number": "7",
              "description": ""
            },
            {
              "name": "UNKNOWN_EFFECT",
              "number": "8",
              "description": ""
            },
            {
              "name": "STOP_MOVED",
              "number": "9",
              "description": ""
            },
            {
              "name": "NO_EFFECT",
              "number": "10",
              "description": ""
            },
            {
              "name": "ACCESSIBILITY_ISSUE",
              "number": "11",
              "description": ""
            }
          ]
        },
        {
          "name": "SeverityLevel",
          "longName": "Alert.SeverityLevel",
          "fullName": "transit_realtime.Alert.SeverityLevel",
          "description": "Severity of this alert.",
          "values": [
            {
              "name": "UNKNOWN_SEVERITY",
              "number": "1",
              "description": ""
            },
            {
              "name": "INFO",
              "number": "2",
              "description": ""
            },
            {
              "name": "WARNING",
              "number": "3",
              "description": ""
            },
            {
              "name": "SEVERE",
              "number": "4",
              "description": ""
            }
          ]
        },
        {
          "name": "Incrementality",
          "longName": "FeedHeader.Incrementality",
          "fullName": "transit_realtime.FeedHeader.Incrementality",
          "description": "Determines whether the current fetch is incremental.  Currently,\nDIFFERENTIAL mode is unsupported and behavior is unspecified for feeds\nthat use this mode.  There are discussions on the GTFS Realtime mailing\nlist around fully specifying the behavior of DIFFERENTIAL mode and the\ndocumentation will be updated when those discussions are finalized.",
          "values": [
            {
              "name": "FULL_DATASET",
              "number": "0",
              "description": ""
            },
            {
              "name": "DIFFERENTIAL",
              "number": "1",
              "description": ""
            }
          ]
        },
        {
          "name": "ScheduleRelationship",
          "longName": "TripDescriptor.ScheduleRelationship",
          "fullName": "transit_realtime.TripDescriptor.ScheduleRelationship",
          "description": "The relation between this trip and the static schedule. If a trip is done\nin accordance with temporary schedule, not reflected in GTFS, then it\nshouldn't be marked as SCHEDULED, but likely as ADDED.",
          "values": [
            {
              "name": "SCHEDULED",
              "number": "0",
              "description": "Trip that is running in accordance with its GTFS schedule, or is close\nenough to the scheduled trip to be associated with it."
            },
            {
              "name": "ADDED",
              "number": "1",
              "description": "An extra trip that was added in addition to a running schedule, for\nexample, to replace a broken vehicle or to respond to sudden passenger\nload.\nNOTE: Currently, behavior is unspecified for feeds that use this mode. There are discussions on the GTFS GitHub\n[(1)](https://github.com/google/transit/issues/106) [(2)](https://github.com/google/transit/pull/221)\n[(3)](https://github.com/google/transit/pull/219) around fully specifying or deprecating ADDED trips and the\ndocumentation will be updated when those discussions are finalized."
            },
            {
              "name": "UNSCHEDULED",
              "number": "2",
              "description": "A trip that is running with no schedule associated to it (GTFS frequencies.txt exact_times=0).\nTrips with ScheduleRelationship=UNSCHEDULED must also set all StopTimeUpdates.ScheduleRelationship=UNSCHEDULED."
            },
            {
              "name": "CANCELED",
              "number": "3",
              "description": "A trip that existed in the schedule but was removed."
            },
            {
              "name": "REPLACEMENT",
              "number": "5",
              "description": "Should not be used - for backwards-compatibility only.",
              "options": {
                "deprecated": true
              }
            },
            {
              "name": "DUPLICATED",
              "number": "6",
              "description": "An extra trip that was added in addition to a running schedule, for example, to replace a broken vehicle or to\nrespond to sudden passenger load. Used with TripUpdate.TripProperties.trip_id, TripUpdate.TripProperties.start_date,\nand TripUpdate.TripProperties.start_time to copy an existing trip from static GTFS but start at a different service\ndate and/or time. Duplicating a trip is allowed if the service related to the original trip in (CSV) GTFS\n(in calendar.txt or calendar_dates.txt) is operating within the next 30 days. The trip to be duplicated is\nidentified via TripUpdate.TripDescriptor.trip_id. This enumeration does not modify the existing trip referenced by\nTripUpdate.TripDescriptor.trip_id - if a producer wants to cancel the original trip, it must publish a separate\nTripUpdate with the value of CANCELED. Trips defined in GTFS frequencies.txt with exact_times that is empty or\nequal to 0 cannot be duplicated. The VehiclePosition.TripDescriptor.trip_id for the new trip must contain\nthe matching value from TripUpdate.TripProperties.trip_id and VehiclePosition.TripDescriptor.ScheduleRelationship\nmust also be set to DUPLICATED.\nExisting producers and consumers that were using the ADDED enumeration to represent duplicated trips must follow\nthe migration guide (https://github.com/google/transit/tree/master/gtfs-realtime/spec/en/examples/migration-duplicated.md)\nto transition to the DUPLICATED enumeration.\nNOTE: This field is still experimental, and subject to change. It may be formally adopted in the future."
            }
          ]
        },
        {
          "name": "ScheduleRelationship",
          "longName": "TripUpdate.StopTimeUpdate.ScheduleRelationship",
          "fullName": "transit_realtime.TripUpdate.StopTimeUpdate.ScheduleRelationship",
          "description": "The relation between this StopTime and the static schedule.",
          "values": [
            {
              "name": "SCHEDULED",
              "number": "0",
              "description": "The vehicle is proceeding in accordance with its static schedule of\nstops, although not necessarily according to the times of the schedule.\nAt least one of arrival and departure must be provided. If the schedule\nfor this stop contains both arrival and departure times then so must\nthis update. Frequency-based trips (GTFS frequencies.txt with exact_times = 0)\nshould not have a SCHEDULED value and should use UNSCHEDULED instead."
            },
            {
              "name": "SKIPPED",
              "number": "1",
              "description": "The stop is skipped, i.e., the vehicle will not stop at this stop.\nArrival and departure are optional."
            },
            {
              "name": "NO_DATA",
              "number": "2",
              "description": "No data is given for this stop. The main intention for this value is to\ngive the predictions only for part of a trip, i.e., if the last update\nfor a trip has a NO_DATA specifier, then StopTimes for the rest of the\nstops in the trip are considered to be unspecified as well.\nNeither arrival nor departure should be supplied."
            },
            {
              "name": "UNSCHEDULED",
              "number": "3",
              "description": "The vehicle is operating a trip defined in GTFS frequencies.txt with exact_times = 0.\nThis value should not be used for trips that are not defined in GTFS frequencies.txt,\nor trips in GTFS frequencies.txt with exact_times = 1. Trips containing StopTimeUpdates\nwith ScheduleRelationship=UNSCHEDULED must also set TripDescriptor.ScheduleRelationship=UNSCHEDULED.\nNOTE: This field is still experimental, and subject to change. It may be\nformally adopted in the future."
            }
          ]
        },
        {
          "name": "CongestionLevel",
          "longName": "VehiclePosition.CongestionLevel",
          "fullName": "transit_realtime.VehiclePosition.CongestionLevel",
          "description": "Congestion level that is affecting this vehicle.",
          "values": [
            {
              "name": "UNKNOWN_CONGESTION_LEVEL",
              "number": "0",
              "description": ""
            },
            {
              "name": "RUNNING_SMOOTHLY",
              "number": "1",
              "description": ""
            },
            {
              "name": "STOP_AND_GO",
              "number": "2",
              "description": ""
            },
            {
              "name": "CONGESTION",
              "number": "3",
              "description": ""
            },
            {
              "name": "SEVERE_CONGESTION",
              "number": "4",
              "description": "People leaving their cars."
            }
          ]
        },
        {
          "name": "OccupancyStatus",
          "longName": "VehiclePosition.OccupancyStatus",
          "fullName": "transit_realtime.VehiclePosition.OccupancyStatus",
          "description": "The degree of passenger occupancy of the vehicle. This field is still\nexperimental, and subject to change. It may be formally adopted in the\nfuture.",
          "values": [
            {
              "name": "EMPTY",
              "number": "0",
              "description": "The vehicle is considered empty by most measures, and has few or no\npassengers onboard, but is still accepting passengers."
            },
            {
              "name": "MANY_SEATS_AVAILABLE",
              "number": "1",
              "description": "The vehicle has a relatively large percentage of seats available.\nWhat percentage of free seats out of the total seats available is to be\nconsidered large enough to fall into this category is determined at the\ndiscretion of the producer."
            },
            {
              "name": "FEW_SEATS_AVAILABLE",
              "number": "2",
              "description": "The vehicle has a relatively small percentage of seats available.\nWhat percentage of free seats out of the total seats available is to be\nconsidered small enough to fall into this category is determined at the\ndiscretion of the feed producer."
            },
            {
              "name": "STANDING_ROOM_ONLY",
              "number": "3",
              "description": "The vehicle can currently accommodate only standing passengers."
            },
            {
              "name": "CRUSHED_STANDING_ROOM_ONLY",
              "number": "4",
              "description": "The vehicle can currently accommodate only standing passengers\nand has limited space for them."
            },
            {
              "name": "FULL",
              "number": "5",
              "description": "The vehicle is considered full by most measures, but may still be\nallowing passengers to board."
            },
            {
              "name": "NOT_ACCEPTING_PASSENGERS",
              "number": "6",
              "description": "The vehicle is not accepting additional passengers."
            }
          ]
        },
        {
          "name": "VehicleStopStatus",
          "longName": "VehiclePosition.VehicleStopStatus",
          "fullName": "transit_realtime.VehiclePosition.VehicleStopStatus",
          "description": "",
          "values": [
            {
              "name": "INCOMING_AT",
              "number": "0",
              "description": "The vehicle is just about to arrive at the stop (on a stop\ndisplay, the vehicle symbol typically flashes)."
            },
            {
              "name": "STOPPED_AT",
              "number": "1",
              "description": "The vehicle is standing at the stop."
            },
            {
              "name": "IN_TRANSIT_TO",
              "number": "2",
              "description": "The vehicle has departed and is in transit to the next stop."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Alert",
          "longName": "Alert",
          "fullName": "transit_realtime.Alert",
          "description": "An alert, indicating some sort of incident in the public transit network.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "active_period",
              "description": "Time when the alert should be shown to the user. If missing, the\nalert will be shown as long as it appears in the feed.\nIf multiple ranges are given, the alert will be shown during all of them.",
              "label": "repeated",
              "type": "TimeRange",
              "longType": "TimeRange",
              "fullType": "transit_realtime.TimeRange",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "informed_entity",
              "description": "Entities whose users we should notify of this alert.",
              "label": "repeated",
              "type": "EntitySelector",
              "longType": "EntitySelector",
              "fullType": "transit_realtime.EntitySelector",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "cause",
              "description": "",
              "label": "optional",
              "type": "Cause",
              "longType": "Alert.Cause",
              "fullType": "transit_realtime.Alert.Cause",
              "ismap": false,
              "defaultValue": "UNKNOWN_CAUSE"
            },
            {
              "name": "effect",
              "description": "",
              "label": "optional",
              "type": "Effect",
              "longType": "Alert.Effect",
              "fullType": "transit_realtime.Alert.Effect",
              "ismap": false,
              "defaultValue": "UNKNOWN_EFFECT"
            },
            {
              "name": "url",
              "description": "The URL which provides additional information about the alert.",
              "label": "optional",
              "type": "TranslatedString",
              "longType": "TranslatedString",
              "fullType": "transit_realtime.TranslatedString",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "header_text",
              "description": "Alert header. Contains a short summary of the alert text as plain-text.",
              "label": "optional",
              "type": "TranslatedString",
              "longType": "TranslatedString",
              "fullType": "transit_realtime.TranslatedString",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "description_text",
              "description": "Full description for the alert as plain-text. The information in the\ndescription should add to the information of the header.",
              "label": "optional",
              "type": "TranslatedString",
              "longType": "TranslatedString",
              "fullType": "transit_realtime.TranslatedString",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "tts_header_text",
              "description": "Text for alert header to be used in text-to-speech implementations. This field is the text-to-speech version of header_text.",
              "label": "optional",
              "type": "TranslatedString",
              "longType": "TranslatedString",
              "fullType": "transit_realtime.TranslatedString",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "tts_description_text",
              "description": "Text for full description for the alert to be used in text-to-speech implementations. This field is the text-to-speech version of description_text.",
              "label": "optional",
              "type": "TranslatedString",
              "longType": "TranslatedString",
              "fullType": "transit_realtime.TranslatedString",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "severity_level",
              "description": "",
              "label": "optional",
              "type": "SeverityLevel",
              "longType": "Alert.SeverityLevel",
              "fullType": "transit_realtime.Alert.SeverityLevel",
              "ismap": false,
              "defaultValue": "UNKNOWN_SEVERITY"
            }
          ]
        },
        {
          "name": "EntitySelector",
          "longName": "EntitySelector",
          "fullName": "transit_realtime.EntitySelector",
          "description": "A selector for an entity in a GTFS feed.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "agency_id",
              "description": "The values of the fields should correspond to the appropriate fields in the\nGTFS feed.\nAt least one specifier must be given. If several are given, then the\nmatching has to apply to all the given specifiers.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "route_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "route_type",
              "description": "corresponds to route_type in GTFS.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "trip",
              "description": "",
              "label": "optional",
              "type": "TripDescriptor",
              "longType": "TripDescriptor",
              "fullType": "transit_realtime.TripDescriptor",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "stop_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "direction_id",
              "description": "Corresponds to trip direction_id in GTFS trips.txt. If provided the\nroute_id must also be provided.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeedEntity",
          "longName": "FeedEntity",
          "fullName": "transit_realtime.FeedEntity",
          "description": "A definition (or update) of an entity in the transit feed.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ids are used only to provide incrementality support. The id should be\nunique within a FeedMessage. Consequent FeedMessages may contain\nFeedEntities with the same id. In case of a DIFFERENTIAL update the new\nFeedEntity with some id will replace the old FeedEntity with the same id\n(or delete it - see is_deleted below).\nThe actual GTFS entities (e.g. stations, routes, trips) referenced by the\nfeed must be specified by explicit selectors (see EntitySelector below for\nmore info).",
              "label": "required",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "is_deleted",
              "description": "Whether this entity is to be deleted. Relevant only for incremental\nfetches.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "defaultValue": "false"
            },
            {
              "name": "trip_update",
              "description": "Data about the entity itself. Exactly one of the following fields must be\npresent (unless the entity is being deleted).",
              "label": "optional",
              "type": "TripUpdate",
              "longType": "TripUpdate",
              "fullType": "transit_realtime.TripUpdate",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "vehicle",
              "description": "",
              "label": "optional",
              "type": "VehiclePosition",
              "longType": "VehiclePosition",
              "fullType": "transit_realtime.VehiclePosition",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "alert",
              "description": "",
              "label": "optional",
              "type": "Alert",
              "longType": "Alert",
              "fullType": "transit_realtime.Alert",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeedHeader",
          "longName": "FeedHeader",
          "fullName": "transit_realtime.FeedHeader",
          "description": "Metadata about a feed, included in feed messages.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "gtfs_realtime_version",
              "description": "Version of the feed specification.\nThe current version is 2.0.  Valid versions are \"2.0\", \"1.0\".",
              "label": "required",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "incrementality",
              "description": "",
              "label": "optional",
              "type": "Incrementality",
              "longType": "FeedHeader.Incrementality",
              "fullType": "transit_realtime.FeedHeader.Incrementality",
              "ismap": false,
              "defaultValue": "FULL_DATASET"
            },
            {
              "name": "timestamp",
              "description": "This timestamp identifies the moment when the content of this feed has been\ncreated (in server time). In POSIX time (i.e., number of seconds since\nJanuary 1st 1970 00:00:00 UTC).",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeedMessage",
          "longName": "FeedMessage",
          "fullName": "transit_realtime.FeedMessage",
          "description": "The contents of a feed message.\nA feed is a continuous stream of feed messages. Each message in the stream is\nobtained as a response to an appropriate HTTP GET request.\nA realtime feed is always defined with relation to an existing GTFS feed.\nAll the entity ids are resolved with respect to the GTFS feed.\nNote that \"required\" and \"optional\" as stated in this file refer to Protocol\nBuffer cardinality, not semantic cardinality.  See reference.md at\nhttps://github.com/google/transit/tree/master/gtfs-realtime for field\nsemantic cardinality.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "header",
              "description": "Metadata about this feed and feed message.",
              "label": "required",
              "type": "FeedHeader",
              "longType": "FeedHeader",
              "fullType": "transit_realtime.FeedHeader",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "entity",
              "description": "Contents of the feed.",
              "label": "repeated",
              "type": "FeedEntity",
              "longType": "FeedEntity",
              "fullType": "transit_realtime.FeedEntity",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Position",
          "longName": "Position",
          "fullName": "transit_realtime.Position",
          "description": "A position.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "latitude",
              "description": "Degrees North, in the WGS-84 coordinate system.",
              "label": "required",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "longitude",
              "description": "Degrees East, in the WGS-84 coordinate system.",
              "label": "required",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "bearing",
              "description": "Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.\nThis can be the compass bearing, or the direction towards the next stop\nor intermediate location.\nThis should not be direction deduced from the sequence of previous\npositions, which can be computed from previous data.",
              "label": "optional",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "odometer",
              "description": "Odometer value, in meters.",
              "label": "optional",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "speed",
              "description": "Momentary speed measured by the vehicle, in meters per second.",
              "label": "optional",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TimeRange",
          "longName": "TimeRange",
          "fullName": "transit_realtime.TimeRange",
          "description": "A time interval. The interval is considered active at time 't' if 't' is\ngreater than or equal to the start time and less than the end time.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "start",
              "description": "Start time, in POSIX time (i.e., number of seconds since January 1st 1970\n00:00:00 UTC).\nIf missing, the interval starts at minus infinity.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "end",
              "description": "End time, in POSIX time (i.e., number of seconds since January 1st 1970\n00:00:00 UTC).\nIf missing, the interval ends at plus infinity.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TranslatedString",
          "longName": "TranslatedString",
          "fullName": "transit_realtime.TranslatedString",
          "description": "An internationalized message containing per-language versions of a snippet of\ntext or a URL.\nOne of the strings from a message will be picked up. The resolution proceeds\nas follows:\n1. If the UI language matches the language code of a translation,\n   the first matching translation is picked.\n2. If a default UI language (e.g., English) matches the language code of a\n   translation, the first matching translation is picked.\n3. If some translation has an unspecified language code, that translation is\n   picked.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "translation",
              "description": "At least one translation must be provided.",
              "label": "repeated",
              "type": "Translation",
              "longType": "TranslatedString.Translation",
              "fullType": "transit_realtime.TranslatedString.Translation",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Translation",
          "longName": "TranslatedString.Translation",
          "fullName": "transit_realtime.TranslatedString.Translation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "text",
              "description": "A UTF-8 string containing the message.",
              "label": "required",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "language",
              "description": "BCP-47 language code. Can be omitted if the language is unknown or if\nno i18n is done at all for the feed. At most one translation is\nallowed to have an unspecified language tag.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TripDescriptor",
          "longName": "TripDescriptor",
          "fullName": "transit_realtime.TripDescriptor",
          "description": "A descriptor that identifies an instance of a GTFS trip, or all instances of\na trip along a route.\n- To specify a single trip instance, the trip_id (and if necessary,\n  start_time) is set. If route_id is also set, then it should be same as one\n  that the given trip corresponds to.\n- To specify all the trips along a given route, only the route_id should be\n  set. Note that if the trip_id is not known, then stop sequence ids in\n  TripUpdate are not sufficient, and stop_ids must be provided as well. In\n  addition, absolute arrival/departure times must be provided.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "trip_id",
              "description": "The trip_id from the GTFS feed that this selector refers to.\nFor non frequency-based trips, this field is enough to uniquely identify\nthe trip. For frequency-based trip, start_time and start_date might also be\nnecessary. When schedule_relationship is DUPLICATED within a TripUpdate, the trip_id identifies the trip from\nstatic GTFS to be duplicated. When schedule_relationship is DUPLICATED within a VehiclePosition, the trip_id\nidentifies the new duplicate trip and must contain the value for the corresponding TripUpdate.TripProperties.trip_id.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "route_id",
              "description": "The route_id from the GTFS that this selector refers to.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "direction_id",
              "description": "The direction_id from the GTFS feed trips.txt file, indicating the\ndirection of travel for trips this selector refers to.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "The initially scheduled start time of this trip instance.\nWhen the trip_id corresponds to a non-frequency-based trip, this field\nshould either be omitted or be equal to the value in the GTFS feed. When\nthe trip_id correponds to a frequency-based trip, the start_time must be\nspecified for trip updates and vehicle positions. If the trip corresponds\nto exact_times=1 GTFS record, then start_time must be some multiple\n(including zero) of headway_secs later than frequencies.txt start_time for\nthe corresponding time period. If the trip corresponds to exact_times=0,\nthen its start_time may be arbitrary, and is initially expected to be the\nfirst departure of the trip. Once established, the start_time of this\nfrequency-based trip should be considered immutable, even if the first\ndeparture time changes -- that time change may instead be reflected in a\nStopTimeUpdate.\nFormat and semantics of the field is same as that of\nGTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "start_date",
              "description": "The scheduled start date of this trip instance.\nMust be provided to disambiguate trips that are so late as to collide with\na scheduled trip on a next day. For example, for a train that departs 8:00\nand 20:00 every day, and is 12 hours late, there would be two distinct\ntrips on the same time.\nThis field can be provided but is not mandatory for schedules in which such\ncollisions are impossible - for example, a service running on hourly\nschedule where a vehicle that is one hour late is not considered to be\nrelated to schedule anymore.\nIn YYYYMMDD format.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "schedule_relationship",
              "description": "",
              "label": "optional",
              "type": "ScheduleRelationship",
              "longType": "TripDescriptor.ScheduleRelationship",
              "fullType": "transit_realtime.TripDescriptor.ScheduleRelationship",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TripUpdate",
          "longName": "TripUpdate",
          "fullName": "transit_realtime.TripUpdate",
          "description": "Realtime update of the progress of a vehicle along a trip.\nDepending on the value of ScheduleRelationship, a TripUpdate can specify:\n- A trip that proceeds along the schedule.\n- A trip that proceeds along a route but has no fixed schedule.\n- A trip that have been added or removed with regard to schedule.\n\nThe updates can be for future, predicted arrival/departure events, or for\npast events that already occurred.\nNormally, updates should get more precise and more certain (see\nuncertainty below) as the events gets closer to current time.\nEven if that is not possible, the information for past events should be\nprecise and certain. In particular, if an update points to time in the past\nbut its update's uncertainty is not 0, the client should conclude that the\nupdate is a (wrong) prediction and that the trip has not completed yet.\n\nNote that the update can describe a trip that is already completed.\nTo this end, it is enough to provide an update for the last stop of the trip.\nIf the time of that is in the past, the client will conclude from that that\nthe whole trip is in the past (it is possible, although inconsequential, to\nalso provide updates for preceding stops).\nThis option is most relevant for a trip that has completed ahead of schedule,\nbut according to the schedule, the trip is still proceeding at the current\ntime. Removing the updates for this trip could make the client assume\nthat the trip is still proceeding.\nNote that the feed provider is allowed, but not required, to purge past\nupdates - this is one case where this would be practically useful.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "trip",
              "description": "The Trip that this message applies to. There can be at most one\nTripUpdate entity for each actual trip instance.\nIf there is none, that means there is no prediction information available.\nIt does *not* mean that the trip is progressing according to schedule.",
              "label": "required",
              "type": "TripDescriptor",
              "longType": "TripDescriptor",
              "fullType": "transit_realtime.TripDescriptor",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "vehicle",
              "description": "Additional information on the vehicle that is serving this trip.",
              "label": "optional",
              "type": "VehicleDescriptor",
              "longType": "VehicleDescriptor",
              "fullType": "transit_realtime.VehicleDescriptor",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "stop_time_update",
              "description": "Updates to StopTimes for the trip (both future, i.e., predictions, and in\nsome cases, past ones, i.e., those that already happened).\nThe updates must be sorted by stop_sequence, and apply for all the\nfollowing stops of the trip up to the next specified one.\n\nExample 1:\nFor a trip with 20 stops, a StopTimeUpdate with arrival delay and departure\ndelay of 0 for stop_sequence of the current stop means that the trip is\nexactly on time.\n\nExample 2:\nFor the same trip instance, 3 StopTimeUpdates are provided:\n- delay of 5 min for stop_sequence 3\n- delay of 1 min for stop_sequence 8\n- delay of unspecified duration for stop_sequence 10\nThis will be interpreted as:\n- stop_sequences 3,4,5,6,7 have delay of 5 min.\n- stop_sequences 8,9 have delay of 1 min.\n- stop_sequences 10,... have unknown delay.",
              "label": "repeated",
              "type": "StopTimeUpdate",
              "longType": "TripUpdate.StopTimeUpdate",
              "fullType": "transit_realtime.TripUpdate.StopTimeUpdate",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Moment at which the vehicle's real-time progress was measured. In POSIX\ntime (i.e., the number of seconds since January 1st 1970 00:00:00 UTC).",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "delay",
              "description": "The current schedule deviation for the trip.  Delay should only be\nspecified when the prediction is given relative to some existing schedule\nin GTFS.\n\nDelay (in seconds) can be positive (meaning that the vehicle is late) or\nnegative (meaning that the vehicle is ahead of schedule). Delay of 0\nmeans that the vehicle is exactly on time.\n\nDelay information in StopTimeUpdates take precedent of trip-level delay\ninformation, such that trip-level delay is only propagated until the next\nstop along the trip with a StopTimeUpdate delay value specified.\n\nFeed providers are strongly encouraged to provide a TripUpdate.timestamp\nvalue indicating when the delay value was last updated, in order to\nevaluate the freshness of the data.\n\nNOTE: This field is still experimental, and subject to change. It may be\nformally adopted in the future.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "trip_properties",
              "description": "",
              "label": "optional",
              "type": "TripProperties",
              "longType": "TripUpdate.TripProperties",
              "fullType": "transit_realtime.TripUpdate.TripProperties",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopTimeEvent",
          "longName": "TripUpdate.StopTimeEvent",
          "fullName": "transit_realtime.TripUpdate.StopTimeEvent",
          "description": "Timing information for a single predicted event (either arrival or\ndeparture).\nTiming consists of delay and/or estimated time, and uncertainty.\n- delay should be used when the prediction is given relative to some\n  existing schedule in GTFS.\n- time should be given whether there is a predicted schedule or not. If\n  both time and delay are specified, time will take precedence\n  (although normally, time, if given for a scheduled trip, should be\n  equal to scheduled time in GTFS + delay).\n\nUncertainty applies equally to both time and delay.\nThe uncertainty roughly specifies the expected error in true delay (but\nnote, we don't yet define its precise statistical meaning). It's possible\nfor the uncertainty to be 0, for example for trains that are driven under\ncomputer timing control.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "delay",
              "description": "Delay (in seconds) can be positive (meaning that the vehicle is late) or\nnegative (meaning that the vehicle is ahead of schedule). Delay of 0\nmeans that the vehicle is exactly on time.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "Event as absolute time.\nIn Unix time (i.e., number of seconds since January 1st 1970 00:00:00\nUTC).",
              "label": "optional",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "uncertainty",
              "description": "If uncertainty is omitted, it is interpreted as unknown.\nIf the prediction is unknown or too uncertain, the delay (or time) field\nshould be empty. In such case, the uncertainty field is ignored.\nTo specify a completely certain prediction, set its uncertainty to 0.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopTimeUpdate",
          "longName": "TripUpdate.StopTimeUpdate",
          "fullName": "transit_realtime.TripUpdate.StopTimeUpdate",
          "description": "Realtime update for arrival and/or departure events for a given stop on a\ntrip. Updates can be supplied for both past and future events.\nThe producer is allowed, although not required, to drop past events.\n\nThe update is linked to a specific stop either through stop_sequence or\nstop_id, so one of the fields below must necessarily be set.\nSee the documentation in TripDescriptor for more information.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "stop_sequence",
              "description": "Must be the same as in stop_times.txt in the corresponding GTFS feed.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "stop_id",
              "description": "Must be the same as in stops.txt in the corresponding GTFS feed.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "arrival",
              "description": "",
              "label": "optional",
              "type": "StopTimeEvent",
              "longType": "TripUpdate.StopTimeEvent",
              "fullType": "transit_realtime.TripUpdate.StopTimeEvent",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "departure",
              "description": "",
              "label": "optional",
              "type": "StopTimeEvent",
              "longType": "TripUpdate.StopTimeEvent",
              "fullType": "transit_realtime.TripUpdate.StopTimeEvent",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "schedule_relationship",
              "description": "",
              "label": "optional",
              "type": "ScheduleRelationship",
              "longType": "TripUpdate.StopTimeUpdate.ScheduleRelationship",
              "fullType": "transit_realtime.TripUpdate.StopTimeUpdate.ScheduleRelationship",
              "ismap": false,
              "defaultValue": "SCHEDULED"
            }
          ]
        },
        {
          "name": "TripProperties",
          "longName": "TripUpdate.TripProperties",
          "fullName": "transit_realtime.TripUpdate.TripProperties",
          "description": "Defines updated properties of the trip\nNOTE: This message is still experimental, and subject to change. It may be formally adopted in the future.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "trip_id",
              "description": "Defines the identifier of a new trip that is a duplicate of an existing trip defined in (CSV) GTFS trips.txt\nbut will start at a different service date and/or time (defined using the TripProperties.start_date and\nTripProperties.start_time fields). See definition of trips.trip_id in (CSV) GTFS. Its value must be different\nthan the ones used in the (CSV) GTFS. Required if schedule_relationship=DUPLICATED, otherwise this field must not\nbe populated and will be ignored by consumers.\nNOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "start_date",
              "description": "Service date on which the DUPLICATED trip will be run, in YYYYMMDD format. Required if\nschedule_relationship=DUPLICATED, otherwise this field must not be populated and will be ignored by consumers.\nNOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "Defines the departure start time of the trip when it’s duplicated. See definition of stop_times.departure_time\nin (CSV) GTFS. Scheduled arrival and departure times for the duplicated trip are calculated based on the offset\nbetween the original trip departure_time and this field. For example, if a GTFS trip has stop A with a\ndeparture_time of 10:00:00 and stop B with departure_time of 10:01:00, and this field is populated with the value\nof 10:30:00, stop B on the duplicated trip will have a scheduled departure_time of 10:31:00. Real-time prediction\ndelay values are applied to this calculated schedule time to determine the predicted time. For example, if a\ndeparture delay of 30 is provided for stop B, then the predicted departure time is 10:31:30. Real-time\nprediction time values do not have any offset applied to them and indicate the predicted time as provided.\nFor example, if a departure time representing 10:31:30 is provided for stop B, then the predicted departure time\nis 10:31:30. This field is required if schedule_relationship is DUPLICATED, otherwise this field must not be\npopulated and will be ignored by consumers.\nNOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VehicleDescriptor",
          "longName": "VehicleDescriptor",
          "fullName": "transit_realtime.VehicleDescriptor",
          "description": "Identification information for the vehicle performing the trip.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Internal system identification of the vehicle. Should be unique per\nvehicle, and can be used for tracking the vehicle as it proceeds through\nthe system.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "label",
              "description": "User visible label, i.e., something that must be shown to the passenger to\nhelp identify the correct vehicle.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "license_plate",
              "description": "The license plate of the vehicle.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VehiclePosition",
          "longName": "VehiclePosition",
          "fullName": "transit_realtime.VehiclePosition",
          "description": "Realtime positioning information for a given vehicle.",
          "hasExtensions": false,
          "hasFields": true,
          "extensions": [],
          "fields": [
            {
              "name": "trip",
              "description": "The Trip that this vehicle is serving.\nCan be empty or partial if the vehicle can not be identified with a given\ntrip instance.",
              "label": "optional",
              "type": "TripDescriptor",
              "longType": "TripDescriptor",
              "fullType": "transit_realtime.TripDescriptor",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "vehicle",
              "description": "Additional information on the vehicle that is serving this trip.",
              "label": "optional",
              "type": "VehicleDescriptor",
              "longType": "VehicleDescriptor",
              "fullType": "transit_realtime.VehicleDescriptor",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "position",
              "description": "Current position of this vehicle.",
              "label": "optional",
              "type": "Position",
              "longType": "Position",
              "fullType": "transit_realtime.Position",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "current_stop_sequence",
              "description": "The stop sequence index of the current stop. The meaning of\ncurrent_stop_sequence (i.e., the stop that it refers to) is determined by\ncurrent_status.\nIf current_status is missing IN_TRANSIT_TO is assumed.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "stop_id",
              "description": "Identifies the current stop. The value must be the same as in stops.txt in\nthe corresponding GTFS feed.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "current_status",
              "description": "The exact status of the vehicle with respect to the current stop.\nIgnored if current_stop_sequence is missing.",
              "label": "optional",
              "type": "VehicleStopStatus",
              "longType": "VehiclePosition.VehicleStopStatus",
              "fullType": "transit_realtime.VehiclePosition.VehicleStopStatus",
              "ismap": false,
              "defaultValue": "IN_TRANSIT_TO"
            },
            {
              "name": "timestamp",
              "description": "Moment at which the vehicle's position was measured. In POSIX time\n(i.e., number of seconds since January 1st 1970 00:00:00 UTC).",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "congestion_level",
              "description": "",
              "label": "optional",
              "type": "CongestionLevel",
              "longType": "VehiclePosition.CongestionLevel",
              "fullType": "transit_realtime.VehiclePosition.CongestionLevel",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "occupancy_status",
              "description": "",
              "label": "optional",
              "type": "OccupancyStatus",
              "longType": "VehiclePosition.OccupancyStatus",
              "fullType": "transit_realtime.VehiclePosition.OccupancyStatus",
              "ismap": false,
              "defaultValue": ""
            },
            {
              "name": "occupancy_percentage",
              "description": "A percentage value representing the degree of passenger occupancy of the vehicle.\nThe values are represented as an integer without decimals. 0 means 0% and 100 means 100%.\nThe value 100 should represent the total maximum occupancy the vehicle was designed for,\nincluding both seated and standing capacity, and current operating regulations allow.\nIt is possible that the value goes over 100 if there are currently more passengers than what the vehicle was designed for.\nThe precision of occupancy_percentage should be low enough that you can't track a single person boarding and alighting for privacy reasons.\nThis field is still experimental, and subject to change. It may be formally adopted in the future.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}