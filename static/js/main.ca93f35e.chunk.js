(this["webpackJsonpdataspace-standard-doc"]=this["webpackJsonpdataspace-standard-doc"]||[]).push([[0],{10:function(e){e.exports=JSON.parse('{"name":"General Transit Feed Specification","description":"The General Transit Feed Specification (GTFS), also known as GTFS static or static transit to differentiate it from the GTFS realtime extension, defines a common format for public transportation schedules and associated geographic information. GTFS \\"feeds\\" let public transit agencies publish their transit data and developers write applications that consume that data in an interoperable way.","files":[{"name":"Header.proto","description":"","package":"","hasEnums":false,"hasExtensions":false,"hasMessages":true,"hasServices":false,"enums":[{"name":"Incrementality","longName":"Header.Incrementality","fullName":".Header.Incrementality","description":"Determines whether the current fetch is incremental.","values":[{"name":"UNKNOWN","number":"0","description":""},{"name":"FULL_DATASET","number":"1","description":""},{"name":"DIFFERENTIAL","number":"2","description":""}]}],"extensions":[],"messages":[{"name":"Header","longName":"Header","fullName":".Header","description":"","hasExtensions":false,"hasFields":true,"extensions":[],"fields":[{"name":"version","description":"Version of the feed specification.\\nThe current version is 0.0.1","label":"","type":"string","longType":"string","fullType":"string","ismap":false,"defaultValue":""},{"name":"incrementality","description":"","label":"","type":"Incrementality","longType":"Header.Incrementality","fullType":"Header.Incrementality","ismap":false,"defaultValue":""},{"name":"timestamp","description":"This timestamp identifies the moment when the content of this feed has been\\ncreated (time at the server). In POSIX time (i.e., number of seconds since\\nJanuary 1st 1970 00:00:00 UTC).","label":"","type":"uint64","longType":"uint64","fullType":"uint64","ismap":false,"defaultValue":""},{"name":"provider","description":"Who is publishing this data.","label":"","type":"Provider","longType":"Provider","fullType":"Provider","ismap":false,"defaultValue":""}]},{"name":"Provider","longName":"Provider","fullName":".Provider","description":"","hasExtensions":false,"hasFields":true,"extensions":[],"fields":[{"name":"id","description":"","label":"","type":"string","longType":"string","fullType":"string","ismap":false,"defaultValue":""},{"name":"name","description":"","label":"","type":"string","longType":"string","fullType":"string","ismap":false,"defaultValue":""}]}],"services":[]},{"name":"FareCollection.proto","description":"","package":"fare_collection","hasEnums":false,"hasExtensions":false,"hasMessages":true,"hasServices":false,"enums":[{"name":"ModeOfPayment","longName":"TicketTransaction.ModeOfPayment","fullName":"fare_collection.TicketTransaction.ModeOfPayment","description":"Specifies the financial mechanism used by the user to acquire the \\nspecific ticket.","values":[{"name":"MODE_OF_PAYMENT_UNKNOWN","number":"0","description":"The specific ModeOfPayment used to make the transaction is not \\nknown/inputed."},{"name":"MODE_OF_PAYMENT_CASH","number":"1","description":"The transaction was made utilising cash (physical bills and/or \\ncoins)."},{"name":"MODE_OF_PAYMENT_DEBIT_CARD","number":"2","description":"The transaction was made utilising a bank issued debit card \\n(any type)."},{"name":"MODE_OF_PAYMENT_CREDIT_CARD","number":"3","description":"The transaction was made utilising a bank issued credit card \\n(any type)."},{"name":"MODE_OF_PAYMENT_WALLET","number":"4","description":"The transaction was made utilising a digital wallet (any type)."},{"name":"MODE_OF_PAYMENT_UPI","number":"5","description":"The transaction was made utilising a Unified Payments Interface \\n(any type)."},{"name":"MODE_OF_PAYMENT_COUPON","number":"6","description":"The transaction was made utilising a digital/physical \\ncoupon/voucher (any type)."},{"name":"MODE_OF_PAYMENT_TRAVEL_CARD","number":"7","description":"The transaction was made utilising a TravelCard as mode of payment\\n(any type)."}]},{"name":"TicketIssueLocation","longName":"TicketTransaction.TicketIssueLocation","fullName":"fare_collection.TicketTransaction.TicketIssueLocation","description":"Indicates if the ticket purchase transaction was performed \\nat the boarding station or directly on the mode of transport.","values":[{"name":"TICKET_ISSUE_LOCATION_UNKNOWN","number":"0","description":"The specific location of where the ticket was issued is not \\nknown/inputed."},{"name":"TICKET_ISSUE_LOCATION_ONBOARD","number":"1","description":"The ticket was issued onboard the mode of transport (any type)."},{"name":"TICKET_ISSUE_LOCATION_STATION","number":"2","description":"The ticket was issued prior onboarding on the station (any type)."}]},{"name":"TicketType","longName":"TicketTransaction.TicketType","fullName":"fare_collection.TicketTransaction.TicketType","description":"Indicates the specific physical/digital  form of the ticket.","values":[{"name":"TICKET_TYPE_UNKNOWN","number":"0","description":"The specific physical/digital  form of the ticket is not \\nknown/inputed."},{"name":"TICKET_TYPE_PAPER","number":"1","description":"The physical form of the ticket is printed on paper."},{"name":"TICKET_TYPE_TOKEN","number":"2","description":"The physical form of the ticket is an electronic token."},{"name":"TICKET_TYPE_TRAVEL_CARD","number":"3","description":"The physical form of the ticket is a travel card (any form)."},{"name":"TICKET_TYPE_MOBILE","number":"4","description":"Includes any digital ticket form (OPT, codebar, QR, etc.)."}]},{"name":"TicketVendorType","longName":"TicketTransaction.TicketVendorType","fullName":"fare_collection.TicketTransaction.TicketVendorType","description":"Indicates the vending mechanism utilised to perform the transaction and\\nissue the specific ticket.","values":[{"name":"TICKET_VENDOR_TYPE_UNKNOWN","number":"0","description":"The specific typology of the vending mechanism that issued the \\nticket is not known/inputed."},{"name":"TICKET_VENDOR_TYPE_ONLINE","number":"1","description":"The ticket was issued via an online platform (website, mobile \\napplication, software)."},{"name":"TICKET_VENDOR_TYPE_MACHINE","number":"2","description":"The ticket was issued via a physical ticketing machine (any type)."},{"name":"TICKET_VENDOR_TYPE_KIOSK","number":"3","description":"The ticket was issued via a physical ticketing kiosk (inside or \\noutside the station)."},{"name":"TICKET_VENDOR_TYPE_CONDUCTOR","number":"4","description":"The ticket was issued by the conductor onboard the specific mode \\nof transport (any type)."}]},{"name":"TravelCardType","longName":"TicketTransaction.TravelCardType","fullName":"fare_collection.TicketTransaction.TravelCardType","description":"In case the TicketType is a TravelCard, indicates the specific typology \\nof it.","values":[{"name":"TRAVEL_CARD_TYPE_UNKNOWN","number":"0","description":"The specific typology of the TravelCard is not known/inputed."},{"name":"TRAVEL_CARD_TYPE_WALLET","number":"1","description":"The TravelCard is a rechargable wallet."},{"name":"TRAVEL_CARD_TYPE_NCMC","number":"2","description":"The TravelCard is a National Common Mobility Card."}]}],"extensions":[],"messages":[{"name":"FeedMessage","longName":"FeedMessage","fullName":"fare_collection.FeedMessage","description":"","hasExtensions":false,"hasFields":true,"extensions":[],"fields":[{"name":"header","description":"Metadata","label":"","type":"Header","longType":"Header","fullType":"Header","ismap":false,"defaultValue":""},{"name":"transitSystem","description":"","label":"repeated","type":"TransitSystem","longType":"TransitSystem","fullType":"fare_collection.TransitSystem","ismap":false,"defaultValue":""}]},{"name":"Gate","longName":"Gate","fullName":"fare_collection.Gate","description":"Identifies the different parameters with which the user enter/exit the \\nstation and/or mode or transport with the purchased ticket. Hence, the \\ntrip is finalised and the validity of the ticket expired.","hasExtensions":false,"hasFields":true,"extensions":[],"fields":[{"name":"gateId","description":"Unique identification number for each gate.","label":"","type":"string","longType":"string","fullType":"string","ismap":false,"defaultValue":""},{"name":"stationId","description":"Unique identification number for each station.","label":"","type":"string","longType":"string","fullType":"string","ismap":false,"defaultValue":""},{"name":"timestamp","description":"Specific time of enter/exit of a user.","label":"","type":"uint64","longType":"uint64","fullType":"uint64","ismap":false,"defaultValue":""},{"name":"ticketValidator","description":"The specific typology of the mechanism that validate a unique ticket.","label":"","type":"string","longType":"string","fullType":"string","ismap":false,"defaultValue":""}]},{"name":"TicketIssued","longName":"TicketIssued","fullName":"fare_collection.TicketIssued","description":"Specifies how a unique ticket was used to perform a commute.","hasExtensions":false,"hasFields":true,"extensions":[],"fields":[{"name":"tripId","description":"Unique identification number for each trip.","label":"","type":"string","longType":"string","fullType":"string","ismap":false,"defaultValue":""},{"name":"ticketTransaction","description":"","label":"","type":"TicketTransaction","longType":"TicketTransaction","fullType":"fare_collection.TicketTransaction","ismap":false,"defaultValue":""},{"name":"entry","description":"Indicates the gate used by the specific user to access the station/mode \\nof transport.","label":"","type":"Gate","longType":"Gate","fullType":"fare_collection.Gate","ismap":false,"defaultValue":""},{"name":"interchanges","description":"In case the user interchanged modes of transport at a station, adds a \\nGate.","label":"repeated","type":"Gate","longType":"Gate","fullType":"fare_collection.Gate","ismap":false,"defaultValue":""},{"name":"exit","description":"Indicates the gate used by the specific user to exit the station/mode \\nof transport.","label":"","type":"Gate","longType":"Gate","fullType":"fare_collection.Gate","ismap":false,"defaultValue":""}]},{"name":"TicketTransaction","longName":"TicketTransaction","fullName":"fare_collection.TicketTransaction","description":"Specifies how a unique ticket was adquired by a user.","hasExtensions":false,"hasFields":true,"extensions":[],"fields":[{"name":"id","description":"Unique identification number for each ticket issued.","label":"","type":"string","longType":"string","fullType":"string","ismap":false,"defaultValue":""},{"name":"cardId","description":"Unique identification number for each TravelCard.","label":"","type":"string","longType":"string","fullType":"string","ismap":false,"defaultValue":""},{"name":"timestamp","description":"Specific time of purchase of a unique ticket.","label":"","type":"uint64","longType":"uint64","fullType":"uint64","ismap":false,"defaultValue":""},{"name":"ticketType","description":"","label":"","type":"TicketType","longType":"TicketTransaction.TicketType","fullType":"fare_collection.TicketTransaction.TicketType","ismap":false,"defaultValue":""},{"name":"travelCardType","description":"","label":"","type":"TravelCardType","longType":"TicketTransaction.TravelCardType","fullType":"fare_collection.TicketTransaction.TravelCardType","ismap":false,"defaultValue":""},{"name":"modeOfPayment","description":"","label":"","type":"ModeOfPayment","longType":"TicketTransaction.ModeOfPayment","fullType":"fare_collection.TicketTransaction.ModeOfPayment","ismap":false,"defaultValue":""},{"name":"ticketIssueLocation","description":"","label":"","type":"TicketIssueLocation","longType":"TicketTransaction.TicketIssueLocation","fullType":"fare_collection.TicketTransaction.TicketIssueLocation","ismap":false,"defaultValue":""},{"name":"ticketVendorType","description":"","label":"","type":"TicketVendorType","longType":"TicketTransaction.TicketVendorType","fullType":"fare_collection.TicketTransaction.TicketVendorType","ismap":false,"defaultValue":""},{"name":"fare","description":"","label":"","type":"Fare","longType":"TicketTransaction.Fare","fullType":"fare_collection.TicketTransaction.Fare","ismap":false,"defaultValue":""}]},{"name":"Fare","longName":"TicketTransaction.Fare","fullName":"fare_collection.TicketTransaction.Fare","description":"Identifies the final fare charged to the user, specifying the various \\nsub-prices accordingly \\nwith the fare structure utilised.","hasExtensions":false,"hasFields":true,"extensions":[],"fields":[{"name":"baseFare","description":"Indicates the regular charge.","label":"","type":"float","longType":"float","fullType":"float","ismap":false,"defaultValue":""},{"name":"surchargeFare","description":"Indicates any additional charge(s) (any type) on top of the \\nbaseFare, if applicable.","label":"","type":"float","longType":"float","fullType":"float","ismap":false,"defaultValue":""},{"name":"waitingFare","description":"Indicates any additional charge(s) as a result of waiting times, \\nif applicable.","label":"","type":"float","longType":"float","fullType":"float","ismap":false,"defaultValue":""},{"name":"commissionFare","description":"Indicates any additional booking charge(s), if applicable.","label":"","type":"float","longType":"float","fullType":"float","ismap":false,"defaultValue":""},{"name":"taxes","description":"Indicates all the applicable taxes (any type), if applicable.","label":"","type":"float","longType":"float","fullType":"float","ismap":false,"defaultValue":""},{"name":"penalties","description":"Indicates any additional penalty(ies), if applicable.","label":"","type":"float","longType":"float","fullType":"float","ismap":false,"defaultValue":""},{"name":"finalFare","description":"By adding all the aforementioned, indicates the final price paid \\nby the user .","label":"","type":"float","longType":"float","fullType":"float","ismap":false,"defaultValue":""}]},{"name":"TransitSystem","longName":"TransitSystem","fullName":"fare_collection.TransitSystem","description":"Specifies the mode of transport issuing the unique ticket.","hasExtensions":false,"hasFields":true,"extensions":[],"fields":[{"name":"id","description":"Unique identification number for the TransitSystem.","label":"","type":"string","longType":"string","fullType":"string","ismap":false,"defaultValue":""},{"name":"name","description":"Name of the specific TransitSystem.","label":"","type":"string","longType":"string","fullType":"string","ismap":false,"defaultValue":""},{"name":"ticketsIssued","description":"","label":"repeated","type":"TicketIssued","longType":"TicketIssued","fullType":"fare_collection.TicketIssued","ismap":false,"defaultValue":""}]}],"services":[]}],"scalarValueTypes":[{"protoType":"double","notes":"","cppType":"double","csType":"double","goType":"float64","javaType":"double","phpType":"float","pythonType":"float","rubyType":"Float"},{"protoType":"float","notes":"","cppType":"float","csType":"float","goType":"float32","javaType":"float","phpType":"float","pythonType":"float","rubyType":"Float"},{"protoType":"int32","notes":"Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead.","cppType":"int32","csType":"int","goType":"int32","javaType":"int","phpType":"integer","pythonType":"int","rubyType":"Bignum or Fixnum (as required)"},{"protoType":"int64","notes":"Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead.","cppType":"int64","csType":"long","goType":"int64","javaType":"long","phpType":"integer/string","pythonType":"int/long","rubyType":"Bignum"},{"protoType":"uint32","notes":"Uses variable-length encoding.","cppType":"uint32","csType":"uint","goType":"uint32","javaType":"int","phpType":"integer","pythonType":"int/long","rubyType":"Bignum or Fixnum (as required)"},{"protoType":"uint64","notes":"Uses variable-length encoding.","cppType":"uint64","csType":"ulong","goType":"uint64","javaType":"long","phpType":"integer/string","pythonType":"int/long","rubyType":"Bignum or Fixnum (as required)"},{"protoType":"sint32","notes":"Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.","cppType":"int32","csType":"int","goType":"int32","javaType":"int","phpType":"integer","pythonType":"int","rubyType":"Bignum or Fixnum (as required)"},{"protoType":"sint64","notes":"Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.","cppType":"int64","csType":"long","goType":"int64","javaType":"long","phpType":"integer/string","pythonType":"int/long","rubyType":"Bignum"},{"protoType":"fixed32","notes":"Always four bytes. More efficient than uint32 if values are often greater than 2^28.","cppType":"uint32","csType":"uint","goType":"uint32","javaType":"int","phpType":"integer","pythonType":"int","rubyType":"Bignum or Fixnum (as required)"},{"protoType":"fixed64","notes":"Always eight bytes. More efficient than uint64 if values are often greater than 2^56.","cppType":"uint64","csType":"ulong","goType":"uint64","javaType":"long","phpType":"integer/string","pythonType":"int/long","rubyType":"Bignum"},{"protoType":"sfixed32","notes":"Always four bytes.","cppType":"int32","csType":"int","goType":"int32","javaType":"int","phpType":"integer","pythonType":"int","rubyType":"Bignum or Fixnum (as required)"},{"protoType":"sfixed64","notes":"Always eight bytes.","cppType":"int64","csType":"long","goType":"int64","javaType":"long","phpType":"integer/string","pythonType":"int/long","rubyType":"Bignum"},{"protoType":"bool","notes":"","cppType":"bool","csType":"bool","goType":"bool","javaType":"boolean","phpType":"boolean","pythonType":"boolean","rubyType":"TrueClass/FalseClass"},{"protoType":"string","notes":"A string must always contain UTF-8 encoded or 7-bit ASCII text.","cppType":"string","csType":"string","goType":"string","javaType":"String","phpType":"string","pythonType":"str/unicode","rubyType":"String (UTF-8)"},{"protoType":"bytes","notes":"May contain any arbitrary sequence of bytes.","cppType":"string","csType":"ByteString","goType":"[]byte","javaType":"ByteString","phpType":"string","pythonType":"str","rubyType":"String (ASCII-8BIT)"}]}')},19:function(e,t,a){e.exports=a.p+"static/media/logo.eb2716e9.svg"},24:function(e,t,a){e.exports=a(39)},29:function(e,t,a){},30:function(e,t,a){},32:function(e,t,a){},33:function(e,t,a){},34:function(e,t,a){},38:function(e,t,a){},39:function(e,t,a){"use strict";a.r(t);var n=a(0),i=a.n(n),s=a(5),l=a.n(s),o=(a(29),a(67));a(30);var r=function(e){var t=e.standardFileJSONArr;function a(e){return i.a.createElement("div",{key:e.fullName,id:e.fullName,className:"msg-table"},i.a.createElement("div",{className:"msg-name-box"},i.a.createElement("span",{className:"msg-name"},e.name)),i.a.createElement("p",{className:"msg-description"},e.description),i.a.createElement("table",{className:"table"},i.a.createElement("thead",{className:"header"},i.a.createElement("tr",null,i.a.createElement("th",{scope:"col",width:"10%"},"Field Name"),i.a.createElement("th",{scope:"col",width:"20%"},"Type"),i.a.createElement("th",{scope:"col"},"Description"))),i.a.createElement("tbody",null,function(e){var t=[];return e.forEach((function(e,a){var n=e.type,s="";e.type[0]===e.type[0].toUpperCase()&&(n=i.a.createElement("a",{href:"#"+e.fullType},e.type)),"repeated"===e.label&&(s="[ ] "),t.push(i.a.createElement("tr",{key:a},i.a.createElement("td",{className:"field-name"},e.name),i.a.createElement("td",null,s,n),i.a.createElement("td",null,e.description)))})),t}(e.fields))))}function n(e){return i.a.createElement("div",{key:e.fullName,id:e.fullName,className:"msg-table"},i.a.createElement("div",{className:"msg-name-box"},i.a.createElement("span",{className:"msg-name"},e.name)),i.a.createElement("p",{className:"msg-description"},e.description),i.a.createElement("table",{className:"table"},i.a.createElement("thead",{className:"header"},i.a.createElement("tr",null,i.a.createElement("th",{scope:"col",width:"10%"},"Number"),i.a.createElement("th",{scope:"col",width:"10%"},"Value"),i.a.createElement("th",{scope:"col"},"Description"))),i.a.createElement("tbody",null,function(e){var t=[];return e.forEach((function(e,a){t.push(i.a.createElement("tr",{key:a},i.a.createElement("td",{className:"field-name"},e.number),i.a.createElement("td",null,e.name),i.a.createElement("td",null,e.description)))})),t}(e.values))))}return i.a.createElement("section",{className:"DocTable"},function(){var e=[];return t.forEach((function(t){for(var n=0;n<t.messages.length;n++)e.push(a(t.messages[n]))})),t.forEach((function(t){for(var a=0;a<t.enums.length;a++)e.push(n(t.enums[a]))})),e}())},c=a(6),p=a(18),d=a(14);var u=function(e){var t="";function a(e){var a={};e.forEach((function(e){for(var n=0;n<e.messages.length;n++)a[e.messages[n].fullName]=e.messages[n],"FeedMessage"==e.messages[n].name&&(t=e.messages[n].fullName)})),e.forEach((function(e){for(var t=0;t<e.enums.length;t++)a[e.enums[t].fullName]=e.enums[t]}));var n=function e(t,a,n){console.log(a),console.log(t);var i=t[a];if(-1===a.indexOf("."))return{name:a+": "+(n||"")};var s=[];"fields"in i?i.fields.forEach((function(a){s.push(e(t,a.fullType,a.name))})):i.values.forEach((function(e){s.push({name:e.name})})),console.log(a);var l="";return void 0!=n&&(l=": "+n),{name:i.name+l,children:s}}(a,t,void 0),i=d.select("#tree-container").append("svg").attr("width",900).attr("height",2800).append("g").attr("transform","translate(90, 400)"),s=c.c(n);s.dx=13,s.dy=900/(s.height+2),p.a().nodeSize([s.dx,s.dy])(s),i.append("g").attr("fill","none").attr("stroke","#555").attr("stroke-opacity",.4).attr("stroke-width",1.5).selectAll("path").data(s.links()).join("path").attr("d",(function(e){return"\n                M".concat(e.target.y,",").concat(e.target.x,"\n                C").concat(e.source.y+s.dy/2,",").concat(e.target.x,"\n                ").concat(e.source.y+s.dy/2,",").concat(e.source.x,"\n                ").concat(e.source.y,",").concat(e.source.x,"\n            ")})),i.append("g").selectAll("circle").data(s.descendants()).join("circle").attr("cx",(function(e){return e.y})).attr("cy",(function(e){return e.x})).attr("fill",(function(e){return e.children?"#555":"#999"})).attr("r",2.5),i.append("g").attr("font-family","sans-serif").attr("font-size",8).attr("stroke-linejoin","round").attr("stroke-width",3).selectAll("text").data(s.descendants()).join("text").attr("x",(function(e){return e.y})).attr("y",(function(e){return e.x})).attr("dy",(function(e){return e.children?"1.51em":"0.31em"})).attr("dx",(function(e){return e.children?8:6})).text((function(e){return e.data.name})).filter((function(e){return e.children})).attr("text-anchor","end").clone(!0).lower().attr("stroke","white"),i.attr("viewBox",0,0,900,2800)}return Object(n.useEffect)((function(){console.log(d),a(e.StandardJSON.files)}),[e]),i.a.createElement("section",{className:"GraphView"},i.a.createElement("div",{id:"tree-container"}))},m=a(19),f=a.n(m),T=(a(32),a(33),a(34),a(10));var y=function(){return Object(n.useEffect)((function(){var e=new IntersectionObserver((function(e){console.log(e)})),t=document.querySelectorAll("*[id] .msg-table");console.log(t),t.forEach((function(t){return e.observe(t)}))}),[]),i.a.createElement("section",{className:"DocPage"},i.a.createElement("div",{className:"container-fluid nopadding full-width-height"},i.a.createElement("div",{className:"row nopadding full-width-height"},i.a.createElement("div",{className:"col-2 nopadding"},i.a.createElement("section",{className:"DocSearch"},i.a.createElement("div",{className:"logo-div"},i.a.createElement("img",{src:f.a,alt:"Logo"})),i.a.createElement(o.a,{label:"Search Data Standards",id:"outlined-start-adornment",className:"doc-search",variant:"outlined",size:"small",InputLabelProps:{style:{fontSize:"1em"}}}))),i.a.createElement("div",{className:"col-8 nopadding"},i.a.createElement("div",{className:"nav-path"},"Data Standards > Transit > GTFS"),i.a.createElement("div",{className:"standard-description"},i.a.createElement("h1",null,"General Transit Feed Specification"),i.a.createElement("h5",null,'The General Transit Feed Specification (GTFS), also known as GTFS static or static transit to differentiate it from the GTFS realtime extension, defines a common format for public transportation schedules and associated geographic information. GTFS "feeds" let public transit agencies publish their transit data and developers write applications that consume that data in an interoperable way.')),i.a.createElement(r,{standardFileJSONArr:T.files}),i.a.createElement(u,{StandardJSON:T})),i.a.createElement("div",{className:"col-2 nopadding"},i.a.createElement("section",{className:"DocContentList"},i.a.createElement("ul",null,function(){var e=[];return T.files.forEach((function(t){t.messages.forEach((function(t,a){e.push(i.a.createElement("a",{key:a,href:"#"+t.fullName},i.a.createElement("li",null,t.name)))}))})),T.files.forEach((function(t){t.enums.forEach((function(t,a){e.push(i.a.createElement("a",{key:a+100,href:"#"+t.fullName},i.a.createElement("li",null,t.name)))}))})),e}()))))))};a(38);var h=function(){return i.a.createElement("div",{className:"App"},i.a.createElement("header",{className:"App-header"}),i.a.createElement(y,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(i.a.createElement(i.a.StrictMode,null,i.a.createElement(h,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[24,1,2]]]);
//# sourceMappingURL=main.ca93f35e.chunk.js.map