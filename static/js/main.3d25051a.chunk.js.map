{"version":3,"sources":["components/DocPage/DocTable.jsx","components/DocPage/GraphView.jsx","components/DocPage/DocPage.jsx","App.js","serviceWorker.js","index.js","components/DocPage/logo_white.svg"],"names":["DocTable","props","standardFileJSONArr","renderMessageTable","obj","key","fullName","id","longName","className","name","description","scope","width","fields","res","forEach","f","idx","typeLink","type","repeated","toUpperCase","href","fullType","label","push","parseMessageRows","renderEnumTable","number","parseEnumRows","values","file","i","messages","length","enums","renderAllTables","GraphView","feedMsgFullName","treeContainer","useRef","parseAsTree","console","log","current","getBoundingClientRect","objMap","data","processNode","nodeType","nodeName","indexOf","children","field","nName","undefined","d3","node","zoom","d3Zoom","scaleExtent","on","e","svgContainer","attr","transform","call","append","root","d3Hierarchy","dx","dy","height","nodeSize","cluster","selectAll","links","join","d","target","y","x","source","descendants","text","filter","clone","lower","useEffect","StandardJSON","files","ref","DocPage","observer","IntersectionObserver","elems","elemsWithIds","document","querySelectorAll","elem","observe","src","Logo","alt","TextField","variant","size","style","backgroundColor","borderRadius","InputLabelProps","fontSize","color","role","data-toggle","aria-controls","aria-selected","aria-labelledby","language","msg","parseContentList","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.3d25051a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './DocTable.scss';\n\nfunction DocTable(props) {\n\n    let standardFileJSONArr = props.standardFileJSONArr\n\n    function parseMessageRows(fields) {\n        let res = []\n       fields.forEach((f, idx) => {\n           let typeLink = f.type\n           let repeated = ''\n           if(f.type[0] === f.type[0].toUpperCase()) {\n               typeLink = <a href={\"#\" + f.fullType}>{f.type}</a>\n           }\n           if(f.label === 'repeated') {\n               repeated = '[ ] '\n           }\n           res.push(\n               <tr key={idx}>\n                    <td className=\"field-name\">{f.name}</td>\n                    <td>{repeated}{typeLink}</td>\n                    <td>{f.description}</td>\n                </tr>\n           )\n       })\n       return res\n    }\n\n    function renderMessageTable(obj) {\n        return(\n            <div key={obj.fullName} id={obj.longName} className=\"msg-table\">\n                <div className=\"msg-name-box\">\n                    <span className=\"msg-name\">{obj.name}</span>\n                </div>\n                <p className=\"msg-description\">{obj.description}</p>\n                <table className=\"table\">\n                    <thead className=\"header\">\n                        <tr>\n                        <th scope=\"col\" width=\"10%\">Field Name</th>\n                        <th scope=\"col\" width=\"20%\">Type</th>\n                        <th scope=\"col\">Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {parseMessageRows(obj.fields)}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    function renderEnumTable(obj) {\n        return(\n            <div key={obj.fullName} id={obj.longName} className=\"msg-table\">\n                <div className=\"msg-name-box\">\n                    <span className=\"msg-name\">{obj.name}</span>\n                </div>\n                <p className=\"msg-description\">{obj.description}</p>\n                <table className=\"table\">\n                    <thead className=\"header\">\n                        <tr>\n                        <th scope=\"col\" width=\"10%\">Number</th>\n                        <th scope=\"col\" width=\"10%\">Value</th>\n                        <th scope=\"col\">Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {parseEnumRows(obj.values)}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    function parseEnumRows(fields) {\n        let res = []\n       fields.forEach((f, idx) => {\n           res.push(\n               <tr key={idx}>\n                    <td className=\"field-name\">{f.number}</td>\n                    <td>{f.name}</td>\n                    <td>{f.description}</td>\n                </tr>\n           )\n       })\n       return res\n    }\n\n    function renderAllTables() {\n        let res = []\n        standardFileJSONArr.forEach(file => {\n            for(let i=0; i<file.messages.length; i++) {\n                res.push(renderMessageTable(file.messages[i]))\n            }\n        })\n\n        standardFileJSONArr.forEach(file => {\n            for(let i=0; i<file.enums.length; i++) {\n                res.push(renderEnumTable(file.enums[i]))\n            }\n        })\n\n        return res\n    }\n\n    return(\n        <section className=\"DocTable\">\n            {renderAllTables()}\n        </section>\n    )\n}\n\nexport default DocTable;\n","import React, { useEffect, useRef } from 'react';\nimport * as d3Hierarchy from 'd3-hierarchy';\nimport * as d3Zoom from 'd3-zoom';\nimport * as d3 from 'd3';\n\nimport './GraphView.scss'\n\nfunction GraphView(props) {\n\n    let feedMsgFullName = ''\n    const treeContainer = useRef(null)\n\n    function processNode(objMap, nodeType, nodeName) {\n        let obj = objMap[nodeType]\n        if(nodeType.indexOf('.') === -1) {\n            return {\n                //name: nodeType + ': ' + (nodeName || '')\n                name: (nodeName || '')\n            }\n        }\n\n        let children = []\n        if('fields' in obj) {\n            \n            obj.fields.forEach(field => {\n                children.push(processNode(objMap, field.fullType, field.name))\n            })\n            \n        } else {\n            \n            /* obj.values.forEach(value => {\n                children.push({\n                    name: value.name\n                })\n            }) */\n        }\n\n        let nName = ''\n        if(nodeName != undefined) {\n            // nName = ': ' + nodeName\n            nName = nodeName\n        }\n\n        if(children.length == 0) {\n            return {\n                name: nName\n            }\n        }\n        \n        return {\n            //name: obj.name + nName,\n            name: nName,\n            children: children\n        }\n    }\n\n    function parseAsTree(standardFileJSONArr) {\n        console.log(treeContainer.current.getBoundingClientRect())\n        let objMap = {}\n        standardFileJSONArr.forEach(file => {\n            for(let i=0; i<file.messages.length; i++) {\n                objMap[file.messages[i].fullName] = file.messages[i]\n\n                if(file.messages[i].name == 'FeedMessage') {\n                    feedMsgFullName = file.messages[i].fullName\n                }\n            }\n        })\n\n        standardFileJSONArr.forEach(file => {\n            for(let i=0; i<file.enums.length; i++) {\n                objMap[file.enums[i].fullName] = file.enums[i]\n            }\n        })\n        \n        \n        let data = processNode(objMap, feedMsgFullName, undefined)\n\n        console.log(objMap)\n\n        var width = 1000\n        var height = 1000\n\n        console.log(d3.select('#tree-container').node().getBoundingClientRect())\n\n        const zoom = d3Zoom.zoom()\n                        .scaleExtent([0.5, 32])\n                        .on('zoom', (e) => {\n                            svgContainer.attr(\"transform\", e.transform)\n                        })\n        \n\n        /* var svg = d3.select('#tree-container')\n            .append('svg')\n                .attr('width', width)\n                .attr('height', height)\n                .call(zoom) */\n\n        var svg = d3.select('#tree-container-svg')\n            .call(zoom)\n        var svgG = svg.append('g')\n                .attr(\"transform\", \"translate(90, 150)\")\n        var svgContainer = svgG.append('g')\n                \n\n        const root = d3Hierarchy.hierarchy(data)\n\n        root.dx = 13;\n        root.dy = width / (root.height + 2);\n\n        var cluster = d3Hierarchy.cluster().nodeSize([root.dx, root.dy])\n\n        cluster(root)\n\n        console.log(root)\n\n        svgContainer.append(\"g\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"#bbb\")\n            .attr(\"stroke-opacity\", 0.4)\n            .attr(\"stroke-width\", 1.5)\n        .selectAll(\"path\")\n            .data(root.links())\n            .join(\"path\")\n            .attr(\"d\", d => `\n                M${d.target.y},${d.target.x}\n                C${d.source.y + root.dy / 2},${d.target.x}\n                ${d.source.y + root.dy / 2},${d.source.x}\n                ${d.source.y},${d.source.x}\n            `);\n\n        svgContainer.append(\"g\")\n            .selectAll(\"circle\")\n            .data(root.descendants())\n            .join(\"circle\")\n            .attr(\"cx\", d => d.y)\n            .attr(\"cy\", d => d.x)\n            .attr(\"fill\", d => d.children ? \"#bbb\" : \"#eee\")\n            .attr(\"r\", 2.5)\n            .on('mouseover', (d, e) => {\n                console.log(d)\n                console.log(e)\n            })\n\n        svgContainer.append(\"g\")\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"font-size\", 10)\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-width\", 3)\n            .selectAll(\"text\")\n            .data(root.descendants())\n            .join(\"text\")\n            .attr(\"fill\", d => d.children ? \"white\" : \"white\")\n            .attr(\"x\", d => d.y)\n            .attr(\"y\", d => d.x)\n            .attr(\"dy\", d => d.children ? \"1.51em\" : \"0.31em\")\n            .attr(\"dx\", d => d.children ? 8 : 6)\n            .text(d => d.data.name)\n            .filter(d => d.children)\n            .attr(\"text-anchor\", \"end\")\n            .clone(true).lower()\n            .attr(\"stroke\", \"#222\");\n\n            //svg.attr(\"viewBox\", 0, 0, width, height)\n\n            \n\n\n    }\n\n    function drawTree() {\n        \n    }\n\n    useEffect(() => {\n        console.log('useEffect')\n        console.log(treeContainer)\n        parseAsTree(props.StandardJSON.files)\n    })\n\n    return(\n        <section className=\"GraphView\">\n            <div id=\"tree-container\" ref={treeContainer}>\n                <svg id=\"tree-container-svg\"></svg>\n            </div>\n        </section>\n    )\n}\n\nexport default GraphView;","import React, { useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Highlight from 'react-highlight.js';\n\nimport DocTable from './DocTable';\nimport GraphView from './GraphView';\n\nimport Logo from './logo_white.svg'\n\nimport './DocPage.scss';\nimport './DocSearch.scss';\nimport './DocContentList.scss';\n\nimport 'highlight.js/styles/dracula.css'\n\n// Temp import\nimport StandardJSON from './ev.json'\n\nfunction DocPage() {\n\n    function parseContentList() {\n        let res = []\n        StandardJSON.files.forEach(f => {\n            f.messages.forEach((msg, idx) => {\n                res.push(\n                    <a key={msg.fullName} href={\"#\" + msg.longName}><li>{msg.name}</li></a>\n                )\n            })\n        })\n\n        StandardJSON.files.forEach(f => {\n            f.enums.forEach((msg, idx) => {\n                res.push(\n                    <a key={msg.fullName + 100} href={\"#\" + msg.longName}><li>{msg.name}</li></a>\n                )\n            })\n        })\n        \n        return res\n    }\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(elems => {\n            console.log(elems)\n        });\n        const elemsWithIds = document.querySelectorAll(\"*[id] .msg-table\");\n        console.log(elemsWithIds)\n        elemsWithIds.forEach(elem => observer.observe(elem));\n    }, [])\n\n    \n\n    /* window.addEventListener('scroll', onScroll)\n    function onScroll(event){\n        //console.log(event)\n        \n        console.log(document.querySelectorAll('*[id]'))\n    } */\n\n    var content = `// MIT License\n\n// Copyright (c) 2020 The Ministry of Housing and Urban Affairs\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n// v0.0.3\n\nsyntax = \"proto3\";\npackage ev_charging_static;\noption java_package = \"in.gov.mohua.ds.transit\";\n\nimport \"Header.proto\";\nimport \"OperatingSchedule.proto\";\nimport \"AcceptedModeOfPayment.proto\";\nimport \"Location.proto\";\nimport \"VehicleType.proto\";\n\nmessage FeedMessage {\n    // Metadata\n    Header header = 1;\n\n    // Information about the specific EV charging station. \n    repeated Station stations = 2;\n}\n\nmessage Station {\n    message Info {\n        // Name of the specific EV charging station.\n        string name = 1;\n        // Address of the specific EV charging station.\n        string address = 2;\n        // Image of the specific EV charging station (if any).\n        string image = 3;\n        // Name of the operator of the specific EV charging station.\n        string operator = 4;\n        // Name of the owner of the specific EV charging station.\n        string owner = 5;\n        // Mode(s) of payment accepted at the specific EV charging station.\n        AcceptedModeOfPayment acceptedModeOfPayment = 6;\n    }\n\n    message VehicleCapacity {\n        // Type of the vehicle.\n        VehicleType vehicleType = 1;\n        // Vehicle capacity count.\n        uint32 count = 2;\n    }\n\n    message Tariff {\n        float baseUnitPrice = 1;\n        float surcharge = 2;\n        float subsidy = 3;\n        float unitPrice = 4;\n    }\n\n    // Uniique identifier for a charging station.\n    string id  = 1;\n    // General information about the specific EV charging station. \n    Info info = 2;\n    // Information about the total vehicle capacity by type supported at the \n    // specific EV charging station.\n    repeated VehicleCapacity vehicleCapacity = 3;\n    // Location of the specific EV charging station.\n    Location location = 4;\n    // Operating schedule of the specific EV charging station.\n    OperatingSchedule operatingSchedule = 5;\n    // Status of operation of the specific EV charging station.\n    Status status = 6;\n    // Typology of vehicles allowed at the specific EV charging station.\n    repeated VehicleType allowedVehicleType = 7;\n    // Information about the specific charging unit. \n    repeated ChargingUnit chargingUnits = 8;\n    // Information about the specific battery swapping unit. \n    repeated SwappingUnit swappingUnits = 9;\n}\n\nenum Status {\n    // The status of operation for the specific EV charging station is unknown.\n    STATUS_UNKNOWN = 0;\n    // The specific EV charging station is operating. \n    STATUS_IN_OPERATION = 1;\n    // The specific EV charging station is not operating thus out of service.\n    STATUS_OUT_OF_SERVICE = 2;\n}\n\nmessage ChargingUnit {\n    enum Type {\n        // The typology of the specific charging unit is not known / specified. \n        CHARGING_UNIT_TYPE_UNKNOWN = 0;\n        // The specific charging unit charges the EVs via a wire. \n        CHARGING_UNIT_TYPE_WIRED = 1;\n        // The specific charging unit charges the EVs without the need of a wire.\n        CHARGING_UNIT_TYPE_WIRELESS = 2;\n        // // The specific charging unit charges the EVs both with wires and wireless.\n        CHARGING_UNIT_TYPE_WIRED_WIRELESS = 3;\n    }\n\n    message Socket {\n        enum Type {\n            // The specific socket is not known / specified. \n            CHARGING_UNIT_SOCKET_TYPE_UNKNOWN = 0;\n\n            CHARGING_UNIT_SOCKET_TYPE_BEVC_AC001 = 1;\n\n            CHARGING_UNIT_SOCKET_TYPE_BEVC_DC001 = 2;\n            // The specific socket is TYPE2.\n            CHARGING_UNIT_SOCKET_TYPE_TYPE2 = 3;\n            CHARGING_UNIT_SOCKET_TYPE_TYPE3 = 4;\n            CHARGING_UNIT_SOCKET_TYPE_CHADEMO = 5;\n            CHARGING_UNIT_SOCKET_TYPE_CCS_SAE = 6;\n            CHARGING_UNIT_SOCKET_TYPE_CCS1 = 7;\n            CHARGING_UNIT_SOCKET_TYPE_CCS2 = 8;\n            CHARGING_UNIT_SOCKET_TYPE_TESLA = 9;\n            CHARGING_UNIT_SOCKET_TYPE_J_1772 = 10;\n            CHARGING_UNIT_SOCKET_TYPE_WALL_EURO = 11;\n            CHARGING_UNIT_SOCKET_TYPE_CARAVAN_MAINS_SOCKET = 12;\n            CHARGING_UNIT_SOCKET_TYPE_DUAL_J_1772 = 13;\n            CHARGING_UNIT_SOCKET_TYPE_DUAL_CHADEMO = 14;\n            CHARGING_UNIT_SOCKET_TYPE_MENNEKES = 15;\n            CHARGING_UNIT_SOCKET_TYPE_DUAL_MENNEKES = 16;\n            CHARGING_UNIT_SOCKET_TYPE_GB_T = 17;\n            CHARGING_UNIT_SOCKET_TYPE_OTHER = 18;\n        }\n\n        // Unique identifier of charging socket or gun.\n        string id = 1;\n        // Typology of the specific socket. \n        Type type = 2;\n    }\n\n    message WirelessPod {\n        enum Type {\n            // The specific wireless pod is a Capacitive Wireless Charging System (CWCS).\n            WIRELESS_POD_TYPE_CWCS = 0;\n            // The specific wireless pod is a Permanent Magnetic Gear Wireless Charging System (PMWC).\n            WIRELESS_POD_TYPE_PMWC = 1;\n            // The specific wireless pod is a Inductive Wireless Charging System (IWC).\n            WIRELESS_POD_TYPE_IWC = 2;\n            // The specific wireless pod is a Resonant Inductive Wireless Charging System (RIWC)\n            WIRELESS_POD_TYPE_RIWC = 3;\n        }\n\n        // Unique identification number assigned to each wireless pod. \n        string id = 1;\n        // Area (in sq m) assigned to each wireless pod. \n        float area = 2;\n        // Typology of the specific wireless pod. \n        Type type = 3;\n    }\n\n    // Unique identification number assigned to each charging unit.\n    string id = 1;\n    // Typology of the specific charging unit. \n    Type type = 2;\n    // Information about the specific EV charging socket. \n    repeated Socket sockets = 3;\n    // Information about the specific EV charging wireless pod. \n    repeated WirelessPod wirelessPods = 4;\n    // Status of operation of the specific charging unit. \n    Status status = 5;\n}\n\nmessage SwappingUnit {\n    message Pod {\n        enum BatteryType {\n            // The specific swapping pod supports Lithium-i on Iron Phosphate (LFP) batteries. \n            SWAPPING_POD_BATTERY_TYPE_LFP = 0;\n            // The specific swapping pod supports Lithium-i on Nickel Cobalt Aluminum (NCA) batteries. \n            SWAPPING_POD_BATTERY_TYPE_NCA = 1;\n            // The specific swapping pod supports Lithium-i on Nickel Cobalt Manganese (NMC) batteries. \n            SWAPPING_POD_BATTERY_TYPE_NMC = 2;\n            // The specific swapping pod supports Lithium-i on Titanium Oxide (LTO) batteries. \n            SWAPPING_POD_BATTERY_TYPE_LTO = 3;\n            // The specific swapping pod supports Sodium Nickel Chloride (Zebra) batteries. \n            SWAPPING_POD_BATTERY_TYPE_ZEBRA = 4;\n            // The specific swapping pod supports Nickel-Metal Hydride (NiMH) batteries. \n            SWAPPING_POD_BATTERY_TYPE_NIMH = 5;\n            // The specific swapping pod supports Flooded Lead-Acid batteries. \n            SWAPPING_POD_BATTERY_TYPE_FLOODED_LEAD_ACID = 6;\n            // The specific swapping pod supports Ultracapacitors.\n            SWAPPING_POD_BATTERY_TYPE_ULTRA_CAPACITORS = 7;\n        }\n\n        // Unique identification number assigned to each swapping pod.\n        string id = 1;\n        // Typology of the specific baterry supported by the specific swapping unit. \n        BatteryType batteryType = 2;\n    }\n\n    // Unique identification number assigned to each swapping unit.\n    string id = 1;\n    // Information about the specific EV charging pod at a battery swapping unit. \n    repeated Pod pods = 2;\n    // Status of operation of the specific battery swapping unit. \n    Status status = 3;\n}\n`\n    var jsonContent = `{\n    \"files\": [\n      {\n        \"name\": \"AcceptedModeOfPayment.proto\",\n        \"description\": \"\",\n        \"package\": \"\",\n        \"hasEnums\": true,\n        \"hasExtensions\": false,\n        \"hasMessages\": false,\n        \"hasServices\": false,\n        \"enums\": [\n          {\n            \"name\": \"AcceptedModeOfPayment\",\n            \"longName\": \"AcceptedModeOfPayment\",\n            \"fullName\": \".AcceptedModeOfPayment\",\n            \"description\": \"\",\n            \"values\": [\n              {\n                \"name\": \"PAYMENT_UNKNOWN\",\n                \"number\": \"0\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"PAYMENT_BANK_CARD\",\n                \"number\": \"1\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"PAYMENT_CASH\",\n                \"number\": \"2\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"PAYMENT_SMART_CARD\",\n                \"number\": \"3\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"PAYMENT_COUPONS\",\n                \"number\": \"4\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"PAYMENT_UPI\",\n                \"number\": \"5\",\n                \"description\": \"\"\n              }\n            ]\n          }\n        ],\n        \"extensions\": [],\n        \"messages\": [],\n        \"services\": []\n      },\n      {\n        \"name\": \"Header.proto\",\n        \"description\": \"\",\n        \"package\": \"\",\n        \"hasEnums\": false,\n        \"hasExtensions\": false,\n        \"hasMessages\": true,\n        \"hasServices\": false,\n        \"enums\": [\n          {\n            \"name\": \"Incrementality\",\n            \"longName\": \"Header.Incrementality\",\n            \"fullName\": \".Header.Incrementality\",\n            \"description\": \"Determines whether the current fetch is incremental.\",\n            \"values\": [\n              {\n                \"name\": \"UNKNOWN\",\n                \"number\": \"0\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"FULL_DATASET\",\n                \"number\": \"1\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"DIFFERENTIAL\",\n                \"number\": \"2\",\n                \"description\": \"\"\n              }\n            ]\n          }\n        ],\n        \"extensions\": [],\n        \"messages\": [\n          {\n            \"name\": \"Header\",\n            \"longName\": \"Header\",\n            \"fullName\": \".Header\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"version\",\n                \"description\": \"Version of the dataset.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"incrementality\",\n                \"description\": \"\",\n                \"label\": \"\",\n                \"type\": \"Incrementality\",\n                \"longType\": \"Header.Incrementality\",\n                \"fullType\": \"Header.Incrementality\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"timestamp\",\n                \"description\": \"This timestamp identifies the moment when the content of this feed has been\\ncreated (time at the server). In POSIX time (i.e., number of seconds since\\nJanuary 1st 1970 00:00:00 UTC).\",\n                \"label\": \"\",\n                \"type\": \"uint64\",\n                \"longType\": \"uint64\",\n                \"fullType\": \"uint64\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"provider\",\n                \"description\": \"Publisher/Provider of the dataset.\",\n                \"label\": \"\",\n                \"type\": \"Provider\",\n                \"longType\": \"Provider\",\n                \"fullType\": \"Provider\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Provider\",\n            \"longName\": \"Provider\",\n            \"fullName\": \".Provider\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"id\",\n                \"description\": \"Unique identifier of the provider.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"name\",\n                \"description\": \"Name of the provider.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          }\n        ],\n        \"services\": []\n      },\n      {\n        \"name\": \"Location.proto\",\n        \"description\": \"\",\n        \"package\": \"\",\n        \"hasEnums\": false,\n        \"hasExtensions\": false,\n        \"hasMessages\": true,\n        \"hasServices\": false,\n        \"enums\": [],\n        \"extensions\": [],\n        \"messages\": [\n          {\n            \"name\": \"Location\",\n            \"longName\": \"Location\",\n            \"fullName\": \".Location\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"latitude\",\n                \"description\": \"\",\n                \"label\": \"\",\n                \"type\": \"float\",\n                \"longType\": \"float\",\n                \"fullType\": \"float\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"longitude\",\n                \"description\": \"\",\n                \"label\": \"\",\n                \"type\": \"float\",\n                \"longType\": \"float\",\n                \"fullType\": \"float\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          }\n        ],\n        \"services\": []\n      },\n      {\n        \"name\": \"OperatingSchedule.proto\",\n        \"description\": \"\",\n        \"package\": \"\",\n        \"hasEnums\": false,\n        \"hasExtensions\": false,\n        \"hasMessages\": true,\n        \"hasServices\": false,\n        \"enums\": [\n          {\n            \"name\": \"DaysOfWeek\",\n            \"longName\": \"OperatingSchedule.DaysOfWeek\",\n            \"fullName\": \".OperatingSchedule.DaysOfWeek\",\n            \"description\": \"\",\n            \"values\": [\n              {\n                \"name\": \"DAY_UNKNOWN\",\n                \"number\": \"0\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"DAY_SUNDAY\",\n                \"number\": \"1\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"DAY_MONDAY\",\n                \"number\": \"2\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"DAY_TUESDAY\",\n                \"number\": \"3\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"DAY_WEDNESDAY\",\n                \"number\": \"4\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"DAY_THURSDAY\",\n                \"number\": \"5\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"DAY_FRIDAY\",\n                \"number\": \"6\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"DAY_SATURDAY\",\n                \"number\": \"7\",\n                \"description\": \"\"\n              }\n            ]\n          }\n        ],\n        \"extensions\": [],\n        \"messages\": [\n          {\n            \"name\": \"OperatingSchedule\",\n            \"longName\": \"OperatingSchedule\",\n            \"fullName\": \".OperatingSchedule\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"opening\",\n                \"description\": \"Opening time\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"closing\",\n                \"description\": \"CLosing time.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"dayOfWeek\",\n                \"description\": \"Open day of the week.\",\n                \"label\": \"repeated\",\n                \"type\": \"DaysOfWeek\",\n                \"longType\": \"OperatingSchedule.DaysOfWeek\",\n                \"fullType\": \"OperatingSchedule.DaysOfWeek\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          }\n        ],\n        \"services\": []\n      },\n      {\n        \"name\": \"VehicleType.proto\",\n        \"description\": \"\",\n        \"package\": \"\",\n        \"hasEnums\": true,\n        \"hasExtensions\": false,\n        \"hasMessages\": false,\n        \"hasServices\": false,\n        \"enums\": [\n          {\n            \"name\": \"VehicleType\",\n            \"longName\": \"VehicleType\",\n            \"fullName\": \".VehicleType\",\n            \"description\": \"\",\n            \"values\": [\n              {\n                \"name\": \"VEHICLE_TYPE_UNKNOWN\",\n                \"number\": \"0\",\n                \"description\": \"Vehicle type is not known or not specified.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_AGRICULTURAL_VEHICLE\",\n                \"number\": \"1\",\n                \"description\": \"Vehicle is used for agricultural purposes.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_BICYCLE\",\n                \"number\": \"2\",\n                \"description\": \"Vehicle type is a bicycle.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_BUS\",\n                \"number\": \"3\",\n                \"description\": \"Vehicle type is a bus.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_CAR\",\n                \"number\": \"4\",\n                \"description\": \"Vehicle type is car.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_CARAVAN\",\n                \"number\": \"5\",\n                \"description\": \"Vehicle type is a caravan.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_CAR_WITH_CARAVAN\",\n                \"number\": \"6\",\n                \"description\": \"Vehicle type is a car with an attached caravan.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_CAR_WITH_TRAILER\",\n                \"number\": \"7\",\n                \"description\": \"Vehicle type is a car with an attached trailer.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_CONSTRUCTION_OR_MAINTENANCE_VEHICLE\",\n                \"number\": \"8\",\n                \"description\": \"Vehicle is used for construction and maintainance purposes.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_LORRY\",\n                \"number\": \"9\",\n                \"description\": \"Vehicle type is a lorry.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_MOPED\",\n                \"number\": \"10\",\n                \"description\": \"Vehicle type is a moped.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_MOTORCYCLE\",\n                \"number\": \"11\",\n                \"description\": \"Vehicle type is a motorcycle.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_MOTORCYCLE_WITH_SIDECAR\",\n                \"number\": \"12\",\n                \"description\": \"Vehicle type is a motorcycle with an attached sidecar.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_MOTOR_SCOOTER\",\n                \"number\": \"13\",\n                \"description\": \"Vehicle type is a motor scooter.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_TANKER\",\n                \"number\": \"14\",\n                \"description\": \"Vehicle type is a tanker.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_TRAILER\",\n                \"number\": \"15\",\n                \"description\": \"Vehicle type is a trailer.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_VAN\",\n                \"number\": \"16\",\n                \"description\": \"Vehicle type is a van.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_ANY_VEHICLE\",\n                \"number\": \"17\",\n                \"description\": \"Vehicle type could be anything.\"\n              },\n              {\n                \"name\": \"VEHICLE_TYPE_AUTORICKSHAW\",\n                \"number\": \"18\",\n                \"description\": \"Vehicle type is an autorickshaw.\"\n              }\n            ]\n          }\n        ],\n        \"extensions\": [],\n        \"messages\": [],\n        \"services\": []\n      },\n      {\n        \"name\": \"EVChargingStatic.proto\",\n        \"description\": \"\",\n        \"package\": \"ev_charging_static\",\n        \"hasEnums\": true,\n        \"hasExtensions\": false,\n        \"hasMessages\": true,\n        \"hasServices\": false,\n        \"enums\": [\n          {\n            \"name\": \"Type\",\n            \"longName\": \"ChargingUnit.Socket.Type\",\n            \"fullName\": \"ev_charging_static.ChargingUnit.Socket.Type\",\n            \"description\": \"\",\n            \"values\": [\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_UNKNOWN\",\n                \"number\": \"0\",\n                \"description\": \"The specific socket is not known / specified.\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_BEVC_AC001\",\n                \"number\": \"1\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_BEVC_DC001\",\n                \"number\": \"2\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_TYPE2\",\n                \"number\": \"3\",\n                \"description\": \"The specific socket is TYPE2.\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_TYPE3\",\n                \"number\": \"4\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_CHADEMO\",\n                \"number\": \"5\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_CCS_SAE\",\n                \"number\": \"6\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_CCS1\",\n                \"number\": \"7\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_CCS2\",\n                \"number\": \"8\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_TESLA\",\n                \"number\": \"9\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_J_1772\",\n                \"number\": \"10\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_WALL_EURO\",\n                \"number\": \"11\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_CARAVAN_MAINS_SOCKET\",\n                \"number\": \"12\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_DUAL_J_1772\",\n                \"number\": \"13\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_DUAL_CHADEMO\",\n                \"number\": \"14\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_MENNEKES\",\n                \"number\": \"15\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_DUAL_MENNEKES\",\n                \"number\": \"16\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_GB_T\",\n                \"number\": \"17\",\n                \"description\": \"\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_SOCKET_TYPE_OTHER\",\n                \"number\": \"18\",\n                \"description\": \"\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Type\",\n            \"longName\": \"ChargingUnit.Type\",\n            \"fullName\": \"ev_charging_static.ChargingUnit.Type\",\n            \"description\": \"\",\n            \"values\": [\n              {\n                \"name\": \"CHARGING_UNIT_TYPE_UNKNOWN\",\n                \"number\": \"0\",\n                \"description\": \"The typology of the specific charging unit is not known / specified.\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_TYPE_WIRED\",\n                \"number\": \"1\",\n                \"description\": \"The specific charging unit charges the EVs via a wire.\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_TYPE_WIRELESS\",\n                \"number\": \"2\",\n                \"description\": \"The specific charging unit charges the EVs without the need of a wire.\"\n              },\n              {\n                \"name\": \"CHARGING_UNIT_TYPE_WIRED_WIRELESS\",\n                \"number\": \"3\",\n                \"description\": \"The specific charging unit charges the EVs both with wires and wireless.\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Type\",\n            \"longName\": \"ChargingUnit.WirelessPod.Type\",\n            \"fullName\": \"ev_charging_static.ChargingUnit.WirelessPod.Type\",\n            \"description\": \"\",\n            \"values\": [\n              {\n                \"name\": \"WIRELESS_POD_TYPE_CWCS\",\n                \"number\": \"0\",\n                \"description\": \"The specific wireless pod is a Capacitive Wireless Charging System (CWCS).\"\n              },\n              {\n                \"name\": \"WIRELESS_POD_TYPE_PMWC\",\n                \"number\": \"1\",\n                \"description\": \"The specific wireless pod is a Permanent Magnetic Gear Wireless Charging System (PMWC).\"\n              },\n              {\n                \"name\": \"WIRELESS_POD_TYPE_IWC\",\n                \"number\": \"2\",\n                \"description\": \"The specific wireless pod is a Inductive Wireless Charging System (IWC).\"\n              },\n              {\n                \"name\": \"WIRELESS_POD_TYPE_RIWC\",\n                \"number\": \"3\",\n                \"description\": \"The specific wireless pod is a Resonant Inductive Wireless Charging System (RIWC)\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Status\",\n            \"longName\": \"Status\",\n            \"fullName\": \"ev_charging_static.Status\",\n            \"description\": \"\",\n            \"values\": [\n              {\n                \"name\": \"STATUS_UNKNOWN\",\n                \"number\": \"0\",\n                \"description\": \"The status of operation for the specific EV charging station is unknown.\"\n              },\n              {\n                \"name\": \"STATUS_IN_OPERATION\",\n                \"number\": \"1\",\n                \"description\": \"The specific EV charging station is operating.\"\n              },\n              {\n                \"name\": \"STATUS_OUT_OF_SERVICE\",\n                \"number\": \"2\",\n                \"description\": \"The specific EV charging station is not operating thus out of service.\"\n              }\n            ]\n          },\n          {\n            \"name\": \"BatteryType\",\n            \"longName\": \"SwappingUnit.Pod.BatteryType\",\n            \"fullName\": \"ev_charging_static.SwappingUnit.Pod.BatteryType\",\n            \"description\": \"\",\n            \"values\": [\n              {\n                \"name\": \"SWAPPING_POD_BATTERY_TYPE_LFP\",\n                \"number\": \"0\",\n                \"description\": \"The specific swapping pod supports Lithium-i on Iron Phosphate (LFP) batteries.\"\n              },\n              {\n                \"name\": \"SWAPPING_POD_BATTERY_TYPE_NCA\",\n                \"number\": \"1\",\n                \"description\": \"The specific swapping pod supports Lithium-i on Nickel Cobalt Aluminum (NCA) batteries.\"\n              },\n              {\n                \"name\": \"SWAPPING_POD_BATTERY_TYPE_NMC\",\n                \"number\": \"2\",\n                \"description\": \"The specific swapping pod supports Lithium-i on Nickel Cobalt Manganese (NMC) batteries.\"\n              },\n              {\n                \"name\": \"SWAPPING_POD_BATTERY_TYPE_LTO\",\n                \"number\": \"3\",\n                \"description\": \"The specific swapping pod supports Lithium-i on Titanium Oxide (LTO) batteries.\"\n              },\n              {\n                \"name\": \"SWAPPING_POD_BATTERY_TYPE_ZEBRA\",\n                \"number\": \"4\",\n                \"description\": \"The specific swapping pod supports Sodium Nickel Chloride (Zebra) batteries.\"\n              },\n              {\n                \"name\": \"SWAPPING_POD_BATTERY_TYPE_NIMH\",\n                \"number\": \"5\",\n                \"description\": \"The specific swapping pod supports Nickel-Metal Hydride (NiMH) batteries.\"\n              },\n              {\n                \"name\": \"SWAPPING_POD_BATTERY_TYPE_FLOODED_LEAD_ACID\",\n                \"number\": \"6\",\n                \"description\": \"The specific swapping pod supports Flooded Lead-Acid batteries.\"\n              },\n              {\n                \"name\": \"SWAPPING_POD_BATTERY_TYPE_ULTRA_CAPACITORS\",\n                \"number\": \"7\",\n                \"description\": \"The specific swapping pod supports Ultracapacitors.\"\n              }\n            ]\n          }\n        ],\n        \"extensions\": [],\n        \"messages\": [\n          {\n            \"name\": \"ChargingUnit\",\n            \"longName\": \"ChargingUnit\",\n            \"fullName\": \"ev_charging_static.ChargingUnit\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"id\",\n                \"description\": \"Unique identification number assigned to each charging unit.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"type\",\n                \"description\": \"Typology of the specific charging unit.\",\n                \"label\": \"\",\n                \"type\": \"Type\",\n                \"longType\": \"ChargingUnit.Type\",\n                \"fullType\": \"ev_charging_static.ChargingUnit.Type\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"sockets\",\n                \"description\": \"Information about the specific EV charging socket.\",\n                \"label\": \"repeated\",\n                \"type\": \"Socket\",\n                \"longType\": \"ChargingUnit.Socket\",\n                \"fullType\": \"ev_charging_static.ChargingUnit.Socket\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"wirelessPods\",\n                \"description\": \"Information about the specific EV charging wireless pod.\",\n                \"label\": \"repeated\",\n                \"type\": \"WirelessPod\",\n                \"longType\": \"ChargingUnit.WirelessPod\",\n                \"fullType\": \"ev_charging_static.ChargingUnit.WirelessPod\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"status\",\n                \"description\": \"Status of operation of the specific charging unit.\",\n                \"label\": \"\",\n                \"type\": \"Status\",\n                \"longType\": \"Status\",\n                \"fullType\": \"ev_charging_static.Status\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Socket\",\n            \"longName\": \"ChargingUnit.Socket\",\n            \"fullName\": \"ev_charging_static.ChargingUnit.Socket\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"id\",\n                \"description\": \"Unique identifier of charging socket or gun.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"type\",\n                \"description\": \"Typology of the specific socket.\",\n                \"label\": \"\",\n                \"type\": \"Type\",\n                \"longType\": \"ChargingUnit.Socket.Type\",\n                \"fullType\": \"ev_charging_static.ChargingUnit.Socket.Type\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          },\n          {\n            \"name\": \"WirelessPod\",\n            \"longName\": \"ChargingUnit.WirelessPod\",\n            \"fullName\": \"ev_charging_static.ChargingUnit.WirelessPod\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"id\",\n                \"description\": \"Unique identification number assigned to each wireless pod.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"area\",\n                \"description\": \"Area (in sq m) assigned to each wireless pod.\",\n                \"label\": \"\",\n                \"type\": \"float\",\n                \"longType\": \"float\",\n                \"fullType\": \"float\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"type\",\n                \"description\": \"Typology of the specific wireless pod.\",\n                \"label\": \"\",\n                \"type\": \"Type\",\n                \"longType\": \"ChargingUnit.WirelessPod.Type\",\n                \"fullType\": \"ev_charging_static.ChargingUnit.WirelessPod.Type\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          },\n          {\n            \"name\": \"FeedMessage\",\n            \"longName\": \"FeedMessage\",\n            \"fullName\": \"ev_charging_static.FeedMessage\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"header\",\n                \"description\": \"Metadata\",\n                \"label\": \"\",\n                \"type\": \"Header\",\n                \"longType\": \"Header\",\n                \"fullType\": \"Header\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"stations\",\n                \"description\": \"Information about the specific EV charging station.\",\n                \"label\": \"repeated\",\n                \"type\": \"Station\",\n                \"longType\": \"Station\",\n                \"fullType\": \"ev_charging_static.Station\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Station\",\n            \"longName\": \"Station\",\n            \"fullName\": \"ev_charging_static.Station\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"id\",\n                \"description\": \"Uniique identifier for a charging station.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"info\",\n                \"description\": \"General information about the specific EV charging station.\",\n                \"label\": \"\",\n                \"type\": \"Info\",\n                \"longType\": \"Station.Info\",\n                \"fullType\": \"ev_charging_static.Station.Info\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"vehicleCapacity\",\n                \"description\": \"Information about the total vehicle capacity by type supported at the \\nspecific EV charging station.\",\n                \"label\": \"repeated\",\n                \"type\": \"VehicleCapacity\",\n                \"longType\": \"Station.VehicleCapacity\",\n                \"fullType\": \"ev_charging_static.Station.VehicleCapacity\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"location\",\n                \"description\": \"Location of the specific EV charging station.\",\n                \"label\": \"\",\n                \"type\": \"Location\",\n                \"longType\": \"Location\",\n                \"fullType\": \"Location\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"operatingSchedule\",\n                \"description\": \"Operating schedule of the specific EV charging station.\",\n                \"label\": \"\",\n                \"type\": \"OperatingSchedule\",\n                \"longType\": \"OperatingSchedule\",\n                \"fullType\": \"OperatingSchedule\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"status\",\n                \"description\": \"Status of operation of the specific EV charging station.\",\n                \"label\": \"\",\n                \"type\": \"Status\",\n                \"longType\": \"Status\",\n                \"fullType\": \"ev_charging_static.Status\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"allowedVehicleType\",\n                \"description\": \"Typology of vehicles allowed at the specific EV charging station.\",\n                \"label\": \"repeated\",\n                \"type\": \"VehicleType\",\n                \"longType\": \"VehicleType\",\n                \"fullType\": \"VehicleType\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"chargingUnits\",\n                \"description\": \"Information about the specific charging unit.\",\n                \"label\": \"repeated\",\n                \"type\": \"ChargingUnit\",\n                \"longType\": \"ChargingUnit\",\n                \"fullType\": \"ev_charging_static.ChargingUnit\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"swappingUnits\",\n                \"description\": \"Information about the specific battery swapping unit.\",\n                \"label\": \"repeated\",\n                \"type\": \"SwappingUnit\",\n                \"longType\": \"SwappingUnit\",\n                \"fullType\": \"ev_charging_static.SwappingUnit\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Info\",\n            \"longName\": \"Station.Info\",\n            \"fullName\": \"ev_charging_static.Station.Info\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"name\",\n                \"description\": \"Name of the specific EV charging station.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"address\",\n                \"description\": \"Address of the specific EV charging station.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"image\",\n                \"description\": \"Image of the specific EV charging station (if any).\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"operator\",\n                \"description\": \"Name of the operator of the specific EV charging station.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"owner\",\n                \"description\": \"Name of the owner of the specific EV charging station.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"acceptedModeOfPayment\",\n                \"description\": \"Mode(s) of payment accepted at the specific EV charging station.\",\n                \"label\": \"\",\n                \"type\": \"AcceptedModeOfPayment\",\n                \"longType\": \"AcceptedModeOfPayment\",\n                \"fullType\": \"AcceptedModeOfPayment\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Tariff\",\n            \"longName\": \"Station.Tariff\",\n            \"fullName\": \"ev_charging_static.Station.Tariff\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"baseUnitPrice\",\n                \"description\": \"\",\n                \"label\": \"\",\n                \"type\": \"float\",\n                \"longType\": \"float\",\n                \"fullType\": \"float\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"surcharge\",\n                \"description\": \"\",\n                \"label\": \"\",\n                \"type\": \"float\",\n                \"longType\": \"float\",\n                \"fullType\": \"float\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"subsidy\",\n                \"description\": \"\",\n                \"label\": \"\",\n                \"type\": \"float\",\n                \"longType\": \"float\",\n                \"fullType\": \"float\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"unitPrice\",\n                \"description\": \"\",\n                \"label\": \"\",\n                \"type\": \"float\",\n                \"longType\": \"float\",\n                \"fullType\": \"float\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          },\n          {\n            \"name\": \"VehicleCapacity\",\n            \"longName\": \"Station.VehicleCapacity\",\n            \"fullName\": \"ev_charging_static.Station.VehicleCapacity\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"vehicleType\",\n                \"description\": \"Type of the vehicle.\",\n                \"label\": \"\",\n                \"type\": \"VehicleType\",\n                \"longType\": \"VehicleType\",\n                \"fullType\": \"VehicleType\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"count\",\n                \"description\": \"Vehicle capacity count.\",\n                \"label\": \"\",\n                \"type\": \"uint32\",\n                \"longType\": \"uint32\",\n                \"fullType\": \"uint32\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          },\n          {\n            \"name\": \"SwappingUnit\",\n            \"longName\": \"SwappingUnit\",\n            \"fullName\": \"ev_charging_static.SwappingUnit\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"id\",\n                \"description\": \"Unique identification number assigned to each swapping unit.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"pods\",\n                \"description\": \"Information about the specific EV charging pod at a battery swapping unit.\",\n                \"label\": \"repeated\",\n                \"type\": \"Pod\",\n                \"longType\": \"SwappingUnit.Pod\",\n                \"fullType\": \"ev_charging_static.SwappingUnit.Pod\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"status\",\n                \"description\": \"Status of operation of the specific battery swapping unit.\",\n                \"label\": \"\",\n                \"type\": \"Status\",\n                \"longType\": \"Status\",\n                \"fullType\": \"ev_charging_static.Status\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          },\n          {\n            \"name\": \"Pod\",\n            \"longName\": \"SwappingUnit.Pod\",\n            \"fullName\": \"ev_charging_static.SwappingUnit.Pod\",\n            \"description\": \"\",\n            \"hasExtensions\": false,\n            \"hasFields\": true,\n            \"extensions\": [],\n            \"fields\": [\n              {\n                \"name\": \"id\",\n                \"description\": \"Unique identification number assigned to each swapping pod.\",\n                \"label\": \"\",\n                \"type\": \"string\",\n                \"longType\": \"string\",\n                \"fullType\": \"string\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              },\n              {\n                \"name\": \"batteryType\",\n                \"description\": \"Typology of the specific baterry supported by the specific swapping unit.\",\n                \"label\": \"\",\n                \"type\": \"BatteryType\",\n                \"longType\": \"SwappingUnit.Pod.BatteryType\",\n                \"fullType\": \"ev_charging_static.SwappingUnit.Pod.BatteryType\",\n                \"ismap\": false,\n                \"defaultValue\": \"\"\n              }\n            ]\n          }\n        ],\n        \"services\": []\n      }\n    ],\n    \"scalarValueTypes\": [\n      {\n        \"protoType\": \"double\",\n        \"notes\": \"\",\n        \"cppType\": \"double\",\n        \"csType\": \"double\",\n        \"goType\": \"float64\",\n        \"javaType\": \"double\",\n        \"phpType\": \"float\",\n        \"pythonType\": \"float\",\n        \"rubyType\": \"Float\"\n      },\n      {\n        \"protoType\": \"float\",\n        \"notes\": \"\",\n        \"cppType\": \"float\",\n        \"csType\": \"float\",\n        \"goType\": \"float32\",\n        \"javaType\": \"float\",\n        \"phpType\": \"float\",\n        \"pythonType\": \"float\",\n        \"rubyType\": \"Float\"\n      },\n      {\n        \"protoType\": \"int32\",\n        \"notes\": \"Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.\",\n        \"cppType\": \"int32\",\n        \"csType\": \"int\",\n        \"goType\": \"int32\",\n        \"javaType\": \"int\",\n        \"phpType\": \"integer\",\n        \"pythonType\": \"int\",\n        \"rubyType\": \"Bignum or Fixnum (as required)\"\n      },\n      {\n        \"protoType\": \"int64\",\n        \"notes\": \"Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.\",\n        \"cppType\": \"int64\",\n        \"csType\": \"long\",\n        \"goType\": \"int64\",\n        \"javaType\": \"long\",\n        \"phpType\": \"integer/string\",\n        \"pythonType\": \"int/long\",\n        \"rubyType\": \"Bignum\"\n      },\n      {\n        \"protoType\": \"uint32\",\n        \"notes\": \"Uses variable-length encoding.\",\n        \"cppType\": \"uint32\",\n        \"csType\": \"uint\",\n        \"goType\": \"uint32\",\n        \"javaType\": \"int\",\n        \"phpType\": \"integer\",\n        \"pythonType\": \"int/long\",\n        \"rubyType\": \"Bignum or Fixnum (as required)\"\n      },\n      {\n        \"protoType\": \"uint64\",\n        \"notes\": \"Uses variable-length encoding.\",\n        \"cppType\": \"uint64\",\n        \"csType\": \"ulong\",\n        \"goType\": \"uint64\",\n        \"javaType\": \"long\",\n        \"phpType\": \"integer/string\",\n        \"pythonType\": \"int/long\",\n        \"rubyType\": \"Bignum or Fixnum (as required)\"\n      },\n      {\n        \"protoType\": \"sint32\",\n        \"notes\": \"Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.\",\n        \"cppType\": \"int32\",\n        \"csType\": \"int\",\n        \"goType\": \"int32\",\n        \"javaType\": \"int\",\n        \"phpType\": \"integer\",\n        \"pythonType\": \"int\",\n        \"rubyType\": \"Bignum or Fixnum (as required)\"\n      },\n      {\n        \"protoType\": \"sint64\",\n        \"notes\": \"Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.\",\n        \"cppType\": \"int64\",\n        \"csType\": \"long\",\n        \"goType\": \"int64\",\n        \"javaType\": \"long\",\n        \"phpType\": \"integer/string\",\n        \"pythonType\": \"int/long\",\n        \"rubyType\": \"Bignum\"\n      },\n      {\n        \"protoType\": \"fixed32\",\n        \"notes\": \"Always four bytes. More efficient than uint32 if values are often greater than 2^28.\",\n        \"cppType\": \"uint32\",\n        \"csType\": \"uint\",\n        \"goType\": \"uint32\",\n        \"javaType\": \"int\",\n        \"phpType\": \"integer\",\n        \"pythonType\": \"int\",\n        \"rubyType\": \"Bignum or Fixnum (as required)\"\n      },\n      {\n        \"protoType\": \"fixed64\",\n        \"notes\": \"Always eight bytes. More efficient than uint64 if values are often greater than 2^56.\",\n        \"cppType\": \"uint64\",\n        \"csType\": \"ulong\",\n        \"goType\": \"uint64\",\n        \"javaType\": \"long\",\n        \"phpType\": \"integer/string\",\n        \"pythonType\": \"int/long\",\n        \"rubyType\": \"Bignum\"\n      },\n      {\n        \"protoType\": \"sfixed32\",\n        \"notes\": \"Always four bytes.\",\n        \"cppType\": \"int32\",\n        \"csType\": \"int\",\n        \"goType\": \"int32\",\n        \"javaType\": \"int\",\n        \"phpType\": \"integer\",\n        \"pythonType\": \"int\",\n        \"rubyType\": \"Bignum or Fixnum (as required)\"\n      },\n      {\n        \"protoType\": \"sfixed64\",\n        \"notes\": \"Always eight bytes.\",\n        \"cppType\": \"int64\",\n        \"csType\": \"long\",\n        \"goType\": \"int64\",\n        \"javaType\": \"long\",\n        \"phpType\": \"integer/string\",\n        \"pythonType\": \"int/long\",\n        \"rubyType\": \"Bignum\"\n      },\n      {\n        \"protoType\": \"bool\",\n        \"notes\": \"\",\n        \"cppType\": \"bool\",\n        \"csType\": \"bool\",\n        \"goType\": \"bool\",\n        \"javaType\": \"boolean\",\n        \"phpType\": \"boolean\",\n        \"pythonType\": \"boolean\",\n        \"rubyType\": \"TrueClass/FalseClass\"\n      },\n      {\n        \"protoType\": \"string\",\n        \"notes\": \"A string must always contain UTF-8 encoded or 7-bit ASCII text.\",\n        \"cppType\": \"string\",\n        \"csType\": \"string\",\n        \"goType\": \"string\",\n        \"javaType\": \"String\",\n        \"phpType\": \"string\",\n        \"pythonType\": \"str/unicode\",\n        \"rubyType\": \"String (UTF-8)\"\n      },\n      {\n        \"protoType\": \"bytes\",\n        \"notes\": \"May contain any arbitrary sequence of bytes.\",\n        \"cppType\": \"string\",\n        \"csType\": \"ByteString\",\n        \"goType\": \"[]byte\",\n        \"javaType\": \"ByteString\",\n        \"phpType\": \"string\",\n        \"pythonType\": \"str\",\n        \"rubyType\": \"String (ASCII-8BIT)\"\n      }\n    ]\n  }`\n\n    return(\n        <section className=\"DocPage\">\n            <div className=\"container-fluid nopadding full-width-height\">\n                <div className=\"row nopadding full-width-height\">\n                    <div className=\"col-2 nopadding\">\n                        <section className=\"DocSearch\">\n                            <div className=\"logo-div\">\n                                <img src={Logo} alt=\"Logo\"/>\n                            </div>\n                            <TextField\n                                label=\"Search\"\n                                id=\"outlined-start-adornment\"\n                                className=\"doc-search\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                style={{\n                                    backgroundColor: \"#333\",\n                                    borderRadius: \"5px\"\n                                }}\n                                InputLabelProps={{ style: \n                                    { \n                                        fontSize: \"1em\",\n                                        color: \"#bbb\"\n                                    } \n                                }}\n                            />\n                        </section>\n                    </div>\n                    <div className=\"col-8 nopadding\">\n                        <div className=\"nav-path\">Data Standards > Transit > EV Charging</div>\n                        <div className=\"standard-description\">\n                            <h1>Electric Vehicle Charging Infrastructure</h1>\n                            <h5>\n                                Electric Vehicle Charging Infrastructure defines a common format for creation of datasets related to charging stations and any other related infrastructure. This data standard facilitates data sharing for both, EV users and charging facility operators.\n                            </h5>\n                        </div>\n                        <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n                            <li className=\"nav-item\" role=\"presentation\">\n                                <a className=\"nav-link active\" id=\"doc-tab\" data-toggle=\"tab\" href=\"#doc\" role=\"tab\" aria-controls=\"doc\" aria-selected=\"true\">Documentation</a>\n                            </li>\n                            <li className=\"nav-item\" role=\"presentation\">\n                                <a className=\"nav-link\" id=\"graph-tab\" data-toggle=\"tab\" href=\"#graph\" role=\"tab\" aria-controls=\"graph\" aria-selected=\"false\">Graph Visualisation</a>\n                            </li>\n                            <li className=\"nav-item\" role=\"presentation\">\n                                <a className=\"nav-link\" id=\"sample-tab\" data-toggle=\"tab\" href=\"#sample\" role=\"tab\" aria-controls=\"sample\" aria-selected=\"false\">Sample Dataset</a>\n                            </li>\n                            <li className=\"nav-item\" role=\"presentation\">\n                                <a className=\"nav-link\" id=\"proto-tab\" data-toggle=\"tab\" href=\"#proto\" role=\"tab\" aria-controls=\"proto\" aria-selected=\"false\">Protobuf</a>\n                            </li>\n                        </ul>\n                        <div className=\"tab-content\" id=\"myTabContent\">\n                            <div className=\"tab-pane fade show active\" id=\"doc\" role=\"tabpanel\" aria-labelledby=\"doc-tab\">\n                                <DocTable standardFileJSONArr={StandardJSON.files}/>\n                            </div>\n                            <div className=\"tab-pane fade\" id=\"graph\" role=\"tabpanel\" aria-labelledby=\"graph-tab\">\n                                <GraphView StandardJSON={StandardJSON}/>\n                            </div>\n                            <div className=\"tab-pane fade\" id=\"sample\" role=\"tabpanel\" aria-labelledby=\"sample-tab\">\n                                <Highlight language=\"json\">\n                                    {jsonContent}\n                                </Highlight>\n                            </div>\n                            <div className=\"tab-pane fade\" id=\"proto\" role=\"tabpanel\" aria-labelledby=\"proto-tab\">\n                                <Highlight language=\"proto\">\n                                    {content}\n                                </Highlight>\n                            </div>\n                        </div>\n                        \n                        \n                    </div>\n                    <div className=\"col-2 nopadding\">\n                        <section className=\"DocContentList\">\n                            <ul>\n                                {parseContentList()}\n                            </ul>\n                        </section>\n                    </div>\n                </div>\n            </div>\n            \n        </section>\n    )\n}\n\nexport default DocPage;","import React from 'react';\n\nimport DocPage from './components/DocPage/DocPage'\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n      </header>\n      <DocPage/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_white.df3db2c6.svg\";"],"sourceRoot":""}